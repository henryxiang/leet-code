{
  "questionId": "1001",
  "questionFrontendId": "961",
  "boundTopicId": null,
  "title": "N-Repeated Element in Size 2N Array",
  "titleSlug": "n-repeated-element-in-size-2n-array",
  "categoryTitle": "Algorithms",
  "content": "<p>In a array <code>A</code> of size <code>2N</code>, there are <code>N+1</code> unique elements, and exactly one of these elements is repeated N times.</p>\r\n\r\n<p>Return the element repeated <code>N</code> times.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,3,3]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[2,1,2,5,3,2]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">2</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[5,1,5,2,5,3,5,4]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">5</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>4 &lt;= A.length &lt;= 10000</code></li>\r\n\t<li><code>0 &lt;= A[i] &lt; 10000</code></li>\r\n\t<li><code>A.length</code> is even</li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n",
  "isPaidOnly": false,
  "difficulty": "Easy",
  "likes": 301,
  "dislikes": 184,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "ritvikk",
      "profileUrl": "/ritvikk/",
      "avatarUrl": "https://assets.leetcode.com/users/ritvikk/avatar_1547306855.png"
    }
  ],
  "topicTags": [
    {
      "name": "Hash Table",
      "slug": "hash-table"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"akamai\", \"slug\": \"akamai\", \"timesEncountered\": 0}], \"2\": [{\"taggedByAdmin\": false, \"name\": \"Apple\", \"slug\": \"apple\", \"timesEncountered\": 2}], \"1\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    int repeatedNTimes(vector<int>& A) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int repeatedNTimes(int[] A) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def repeatedNTimes(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def repeatedNTimes(self, A: List[int]) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint repeatedNTimes(int* A, int ASize){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public int RepeatedNTimes(int[] A) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number[]} A\n * @return {number}\n */\nvar repeatedNTimes = function(A) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer[]} a\n# @return {Integer}\ndef repeated_n_times(a)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func repeatedNTimes(_ A: [Int]) -> Int {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func repeatedNTimes(A []int) int {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def repeatedNTimes(A: Array[Int]): Int = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun repeatedNTimes(A: IntArray): Int {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn repeated_n_times(a: Vec<i32>) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer[] $A\n     * @return Integer\n     */\n    function repeatedNTimes($A) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"89.5K\", \"totalSubmission\": \"123K\", \"totalAcceptedRaw\": 89480, \"totalSubmissionRaw\": 123026, \"acRate\": \"72.7%\"}",
  "hints": [],
  "solution": {
    "id": "647",
    "canSeeDetail": true,
    "url": "/articles/n-repeated-element-in-size-2n-array/",
    "content": "[TOC]\n\n## Solution\n---\n#### Approach 1: Count\n\n**Intuition and Algorithm**\n\nLet's count the number of elements.  We can use a `HashMap` or an array - here, we use a `HashMap`.\n\nAfter, the element with a count larger than 1 must be the answer.\n\n<iframe src=\"https://leetcode.com/playground/Xu4ee6QT/shared\" frameBorder=\"0\" width=\"100%\" height=\"293\" name=\"Xu4ee6QT\"></iframe>\n\n**Complexity Analysis**\n\n* Time Complexity:  $$O(N)$$, where $$N$$ is the length of `A`.\n\n* Space Complexity:  $$O(N)$$.\n<br />\n<br />\n\n\n---\n#### Approach 2: Compare\n\n**Intuition and Algorithm**\n\nIf we ever find a repeated element, it must be the answer.  Let's call this answer the *major element*.\n\nConsider all subarrays of length 4.  There must be a major element in at least one such subarray.\n\nThis is because either:\n\n* There is a major element in a length 2 subarray, or;\n* Every length 2 subarray has exactly 1 major element, which means that a length 4 subarray that begins at a major element will have 2 major elements.\n\nThus, we only have to compare elements with their neighbors that are distance 1, 2, or 3 away.\n\n<iframe src=\"https://leetcode.com/playground/9URvAsjC/shared\" frameBorder=\"0\" width=\"100%\" height=\"225\" name=\"9URvAsjC\"></iframe>\n\n**Complexity Analysis**\n\n* Time Complexity:  $$O(N)$$, where $$N$$ is the length of `A`.\n\n* Space Complexity:  $$O(1)$$.\n<br />\n<br />\n\n\n---\nAnalysis written by: [@awice](https://leetcode.com/awice).",
    "contentTypeId": "107",
    "rating": {
      "id": "633",
      "count": 27,
      "average": 3.704,
      "userRating": null
    }
  },
  "status": null,
  "sampleTestCase": "[1,2,3,3]",
  "metaData": "{\r\n  \"name\": \"repeatedNTimes\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"A\",\r\n      \"type\": \"integer[]\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}\r\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
