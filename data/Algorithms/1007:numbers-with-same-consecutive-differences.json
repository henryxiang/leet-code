{
  "questionId": "1007",
  "questionFrontendId": "967",
  "boundTopicId": null,
  "title": "Numbers With Same Consecutive Differences",
  "titleSlug": "numbers-with-same-consecutive-differences",
  "categoryTitle": "Algorithms",
  "content": "<p>Return all <strong>non-negative</strong> integers of length <code>N</code> such that the absolute difference between every two consecutive digits is <code>K</code>.</p>\r\n\r\n<p>Note that <strong>every</strong> number in the answer <strong>must not</strong> have leading zeros <strong>except</strong> for the number <code>0</code> itself. For example, <code>01</code> has one leading zero and is invalid, but <code>0</code> is valid.</p>\r\n\r\n<p>You may return the answer in any order.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>N = <span id=\"example-input-1-1\">3</span>, K = <span id=\"example-input-1-2\">7</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[181,292,707,818,929]</span>\r\n<strong>Explanation: </strong>Note that 070 is not a valid number, because it has leading zeroes.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>N = <span id=\"example-input-2-1\">2</span>, K = <span id=\"example-input-2-2\">1</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[10,12,21,23,32,34,43,45,54,56,65,67,76,78,87,89,98]</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= N &lt;= 9</code></li>\r\n\t<li><code>0 &lt;= K &lt;= 9</code></li>\r\n</ol>\r\n",
  "isPaidOnly": false,
  "difficulty": "Medium",
  "likes": 132,
  "dislikes": 42,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "shivamjindal310",
      "profileUrl": "/shivamjindal310/",
      "avatarUrl": "https://assets.leetcode.com/users/shivamjindal310/avatar_1535111749.png"
    }
  ],
  "topicTags": [
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Flipkart\", \"slug\": \"flipkart\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\r\npublic:\r\n    vector<int> numsSameConsecDiff(int N, int K) {\r\n        \r\n    }\r\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\r\n    public int[] numsSameConsecDiff(int N, int K) {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\r\n    def numsSameConsecDiff(self, N, K):\r\n        \"\"\"\r\n        :type N: int\r\n        :type K: int\r\n        :rtype: List[int]\r\n        \"\"\"\r\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\r\n    def numsSameConsecDiff(self, N, K):\r\n        \"\"\"\r\n        :type N: int\r\n        :type K: int\r\n        :rtype: List[int]\r\n        \"\"\"\r\n        "
    },
    {
      "lang": "C",
      "code": "\n\nstruct int** numsSameConsecDiff(int N, int K){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\r\n    public int[] NumsSameConsecDiff(int N, int K) {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\r\n * @param {number} N\r\n * @param {number} K\r\n * @return {number[]}\r\n */\r\nvar numsSameConsecDiff = function(N, K) {\r\n    \r\n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer} n\r\n# @param {Integer} k\r\n# @return {Integer[]}\r\ndef nums_same_consec_diff(n, k)\r\n    \r\nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\r\n    func numsSameConsecDiff(_ N: Int, _ K: Int) -> [Int] {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Go",
      "code": "func numsSameConsecDiff(N int, K int) []int {\r\n    \r\n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\r\n    def numsSameConsecDiff(N: Int, K: Int): Array[Int] = {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\r\n    fun numsSameConsecDiff(N: Int, K: Int): IntArray {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\r\n    pub fn nums_same_consec_diff(n: i32, k: i32) -> Vec<i32> {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n    function numsSameConsecDiff($N, $K) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"10.5K\", \"totalSubmission\": \"27.4K\", \"totalAcceptedRaw\": 10512, \"totalSubmissionRaw\": 27396, \"acRate\": \"38.4%\"}",
  "hints": [],
  "solution": {
    "id": "650",
    "canSeeDetail": true,
    "url": "/articles/numbers-with-same-consecutive-differences/",
    "content": "[TOC]\n\n## Solution\n---\n#### Approach 1: Brute Force\n\n**Intuition**\n\nLet's try to write some number in the answer digit by digit.\n\nFor each digit except the first, there are at most 2 choices for that digit.  This means that there are at most $$9 * 2^8$$ possible 9 digit numbers, for example.  This is small enough to brute force.\n\n**Algorithm**\n\nAn $$N$$ digit number is just an $$N-1$$ digit number with a final digit added.  If the $$N-1$$ digit number ends in a digit $$d$$, then the $$N$$ digit number will end in $$d-K$$ or $$d+K$$ (provided these are digits in the range $$[0,9]$$).  We store these numbers in a `Set` structure to avoid duplicates.\n\nAlso, we should be careful about leading zeroes -- only 1 digit numbers will start with `0`.\n\n<iframe src=\"https://leetcode.com/playground/QMVwzekW/shared\" frameBorder=\"0\" width=\"100%\" height=\"500\" name=\"QMVwzekW\"></iframe>\n\n**Complexity Analysis**\n\n* Time Complexity:  $$O(2^N)$$.\n\n* Space Complexity:  $$O(2^N)$$.\n<br />\n<br />\n\n\n---\nAnalysis written by: [@awice](https://leetcode.com/awice).",
    "contentTypeId": "107",
    "rating": {
      "id": "639",
      "count": 21,
      "average": 2.524,
      "userRating": null
    }
  },
  "status": null,
  "sampleTestCase": "3\n7",
  "metaData": "{\r\n  \"name\": \"numsSameConsecDiff\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"N\",\r\n      \"type\": \"integer\"\r\n    },\r\n    {\r\n      \"name\": \"K\",\r\n      \"type\": \"integer\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"int[]\"\r\n  }\r\n}\r\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
