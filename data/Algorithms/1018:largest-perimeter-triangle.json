{
  "questionId": "1018",
  "questionFrontendId": "976",
  "boundTopicId": null,
  "title": "Largest Perimeter Triangle",
  "titleSlug": "largest-perimeter-triangle",
  "categoryTitle": "Algorithms",
  "content": "<p>Given an array <code>A</code> of positive lengths, return the largest perimeter of a triangle with <strong>non-zero area</strong>, formed from 3 of these lengths.</p>\r\n\r\n<p>If it is impossible to form any&nbsp;triangle of non-zero area, return <code>0</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[2,1,2]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">5</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,2,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">0</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[3,2,3,4]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">10</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-4-1\">[3,6,2,3]</span>\r\n<strong>Output: </strong><span id=\"example-output-4\">8</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>3 &lt;= A.length &lt;= 10000</code></li>\r\n\t<li><code>1 &lt;= A[i] &lt;= 10^6</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n</div>",
  "isPaidOnly": false,
  "difficulty": "Easy",
  "likes": 248,
  "dislikes": 27,
  "isLiked": null,
  "similarQuestions": "[{\"title\": \"Largest Triangle Area\", \"titleSlug\": \"largest-triangle-area\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
  "contributors": [
    {
      "username": "samdotmak",
      "profileUrl": "/samdotmak/",
      "avatarUrl": "https://www.gravatar.com/avatar/462871b2946403e5d6cd68c2444d6dbb.png?s=200"
    }
  ],
  "topicTags": [
    {
      "name": "Math",
      "slug": "math"
    },
    {
      "name": "Sort",
      "slug": "sort"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"C3 IoT\", \"slug\": \"c3-iot\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    int largestPerimeter(vector<int>& A) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int largestPerimeter(int[] A) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def largestPerimeter(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def largestPerimeter(self, A: List[int]) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint largestPerimeter(int* A, int ASize){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public int LargestPerimeter(int[] A) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number[]} A\n * @return {number}\n */\nvar largestPerimeter = function(A) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer[]} a\n# @return {Integer}\ndef largest_perimeter(a)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func largestPerimeter(_ A: [Int]) -> Int {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func largestPerimeter(A []int) int {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def largestPerimeter(A: Array[Int]): Int = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun largestPerimeter(A: IntArray): Int {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn largest_perimeter(a: Vec<i32>) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer[] $A\n     * @return Integer\n     */\n    function largestPerimeter($A) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"24K\", \"totalSubmission\": \"42K\", \"totalAcceptedRaw\": 24016, \"totalSubmissionRaw\": 41997, \"acRate\": \"57.2%\"}",
  "hints": [],
  "solution": {
    "id": "665",
    "canSeeDetail": true,
    "url": "/articles/largest-perimeter-triangle/",
    "content": "[TOC]\n\n## Solution\n---\n#### Approach 1: Sort\n\n**Intuition**\n\nWithout loss of generality, say the sidelengths of the triangle are $$a \\leq b \\leq c$$.  The necessary and sufficient condition for these lengths to form a triangle of non-zero area is $$a + b > c$$.\n\nSay we knew $$c$$ already.  There is no reason not to choose the largest possible $$a$$ and $$b$$ from the array.  If $$a + b > c$$, then it forms a triangle, otherwise it doesn't.\n\n**Algorithm**\n\nThis leads to a simple algorithm:  Sort the array.  For any $$c$$ in the array, we choose the largest possible $$a \\leq b \\leq c$$:  these are just the two values adjacent to $$c$$.  If this forms a triangle, we return the answer.\n\n<iframe src=\"https://leetcode.com/playground/2RjnrKEg/shared\" frameBorder=\"0\" width=\"100%\" height=\"208\" name=\"2RjnrKEg\"></iframe>\n\n**Complexity Analysis**\n\n* Time Complexity:  $$O(N \\log N)$$, where $$N$$ is the length of `A`.\n\n* Space Complexity:  $$O(1)$$.\n<br />\n<br />\n\n\n---\nAnalysis written by: [@awice](https://leetcode.com/awice).",
    "contentTypeId": "107",
    "rating": {
      "id": "651",
      "count": 14,
      "average": 4.643,
      "userRating": null
    }
  },
  "status": null,
  "sampleTestCase": "[2,1,2]",
  "metaData": "{\r\n  \"name\": \"largestPerimeter\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"A\",\r\n      \"type\": \"integer[]\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}\r\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
