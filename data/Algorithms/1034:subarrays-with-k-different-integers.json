{
  "questionId": "1034",
  "questionFrontendId": "992",
  "boundTopicId": null,
  "title": "Subarrays with K Different Integers",
  "titleSlug": "subarrays-with-k-different-integers",
  "categoryTitle": "Algorithms",
  "content": "<p>Given an array <code>A</code> of positive integers, call a (contiguous, not necessarily distinct) subarray of <code>A</code> <em>good</em> if the number of different integers in that subarray is exactly <code>K</code>.</p>\r\n\r\n<p>(For example, <code>[1,2,3,1,2]</code> has <code>3</code> different integers: <code>1</code>, <code>2</code>, and <code>3</code>.)</p>\r\n\r\n<p>Return the number of good subarrays of <code>A</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[1,2,1,2,3]</span>, K = <span id=\"example-input-1-2\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">7</span>\r\n<strong>Explanation: </strong>Subarrays formed with exactly 2 different integers: [1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2].\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[1,2,1,3,4]</span>, K = <span id=\"example-input-2-2\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">3</span>\r\n<strong>Explanation: </strong>Subarrays formed with exactly 3 different integers: [1,2,1,3], [2,1,3], [1,3,4].\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 20000</code></li>\r\n\t<li><code>1 &lt;= A[i] &lt;= A.length</code></li>\r\n\t<li><code>1 &lt;= K &lt;= A.length</code></li>\r\n</ol>",
  "isPaidOnly": false,
  "difficulty": "Hard",
  "likes": 601,
  "dislikes": 11,
  "isLiked": null,
  "similarQuestions": "[{\"title\": \"Longest Substring Without Repeating Characters\", \"titleSlug\": \"longest-substring-without-repeating-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Substring with At Most Two Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-two-distinct-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Substring with At Most K Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-k-distinct-characters\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
  "contributors": [
    {
      "username": "anujap",
      "profileUrl": "/anujap/",
      "avatarUrl": "https://www.gravatar.com/avatar/2b2047331c0460bdd703fce6cbc14123.png?s=200"
    }
  ],
  "topicTags": [
    {
      "name": "Hash Table",
      "slug": "hash-table"
    },
    {
      "name": "Two Pointers",
      "slug": "two-pointers"
    },
    {
      "name": "Sliding Window",
      "slug": "sliding-window"
    }
  ],
  "companyTagStats": "{\"1\": [{\"taggedByAdmin\": true, \"name\": \"Amazon\", \"slug\": \"amazon\", \"timesEncountered\": 5}, {\"taggedByAdmin\": false, \"name\": \"Goldman Sachs\", \"slug\": \"goldman-sachs\", \"timesEncountered\": 2}], \"2\": [{\"taggedByAdmin\": false, \"name\": \"Alibaba\", \"slug\": \"alibaba\", \"timesEncountered\": 2}], \"3\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    int subarraysWithKDistinct(vector<int>& A, int K) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int subarraysWithKDistinct(int[] A, int K) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def subarraysWithKDistinct(self, A, K):\n        \"\"\"\n        :type A: List[int]\n        :type K: int\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def subarraysWithKDistinct(self, A: List[int], K: int) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint subarraysWithKDistinct(int* A, int ASize, int K){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public int SubarraysWithKDistinct(int[] A, int K) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number[]} A\n * @param {number} K\n * @return {number}\n */\nvar subarraysWithKDistinct = function(A, K) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer[]} a\n# @param {Integer} k\n# @return {Integer}\ndef subarrays_with_k_distinct(a, k)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func subarraysWithKDistinct(_ A: [Int], _ K: Int) -> Int {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func subarraysWithKDistinct(A []int, K int) int {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def subarraysWithKDistinct(A: Array[Int], K: Int): Int = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun subarraysWithKDistinct(A: IntArray, K: Int): Int {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn subarrays_with_k_distinct(a: Vec<i32>, k: i32) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer[] $A\n     * @param Integer $K\n     * @return Integer\n     */\n    function subarraysWithKDistinct($A, $K) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"16.3K\", \"totalSubmission\": \"35.5K\", \"totalAcceptedRaw\": 16326, \"totalSubmissionRaw\": 35506, \"acRate\": \"46.0%\"}",
  "hints": [],
  "solution": {
    "id": "689",
    "canSeeDetail": true,
    "url": "/articles/subarrays-with-k-different-integers/",
    "content": "[TOC]\n\n## Solution\n---\n#### Approach 1: Sliding Window\n\n**Intuition**\n\nFor convenience, let's denote subarrays by tuples: `(i,j) = [A[i], A[i+1], ..., A[j]]`, and call a subarray *valid* if it has `K` different integers.\n\nFor each `j`, let's consider the set $$S_j$$ of all `i` such that the subarray `(i, j)` is valid.\n\nFirstly, $$S_j$$ must be a contiguous interval.  If `i1 < i2 < i3`, `(i1,j)` and `(i3,j)` are valid, but `(i2,j)` is not valid, this is a contradiction because `(i2,j)` must contain more than `K` different elements [as `(i3,j)` contains `K`], but `(i1,j)` [which is a superset of `(i2,j)`] only contains `K` different integers.\n\nSo now let's write $$S_j$$ as intervals: $$S_j = [\\text{left1}_j, \\text{left2}_j]$$.\n\nThe second observation is that the endpoints of these intervals must be monotone increeasing - namely, $$\\text{left1}_j$$ and $$\\text{left2}_j$$ are monotone increasing.  With similar logic to the above, we could construct a proof of this fact, but the intuition is that after adding an extra element to our subarrays, they are already valid, or we need to shrink them a bit to keep them valid.\n\n**Algorithm**\n\nWe'll maintain two sliding windows, corresponding to $$\\text{left1}_j$$ and $$\\text{left2}_j$$.  Each sliding window will be able to count how many different elements there are in the window, and add and remove elements in a queue-like fashion.\n\n<iframe src=\"https://leetcode.com/playground/MkaZoDQt/shared\" frameBorder=\"0\" width=\"100%\" height=\"500\" name=\"MkaZoDQt\"></iframe>\n\n**Complexity Analysis**\n\n* Time Complexity:  $$O(N)$$, where $$N$$ is the length of `A`.\n\n* Space Complexity:  $$O(N)$$.\n<br />\n<br />\n\n\n---\nAnalysis written by: [@awice](https://leetcode.com/awice).",
    "contentTypeId": "107",
    "rating": {
      "id": "674",
      "count": 39,
      "average": 3.667,
      "userRating": null
    }
  },
  "status": null,
  "sampleTestCase": "[1,2,1,2,3]\n2",
  "metaData": "{\r\n  \"name\": \"subarraysWithKDistinct\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"A\",\r\n      \"type\": \"integer[]\"\r\n    },\r\n    {\r\n      \"name\": \"K\",\r\n      \"type\": \"integer\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}\r\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
