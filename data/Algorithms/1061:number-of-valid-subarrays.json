{
  "questionId": "1061",
  "questionFrontendId": "1063",
  "boundTopicId": null,
  "title": "Number of Valid Subarrays",
  "titleSlug": "number-of-valid-subarrays",
  "categoryTitle": "Algorithms",
  "content": "<p>Given an array <code>A</code> of integers, return the number of <strong>non-empty continuous subarrays</strong> that satisfy the following condition:</p>\r\n\r\n<p>The leftmost element of the subarray is not larger than other elements in the subarray.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,4,2,5,3]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">11</span>\r\n<strong>Explanation: </strong>There are 11 valid subarrays: [1],[4],[2],[5],[3],[1,4],[2,5],[1,4,2],[2,5,3],[1,4,2,5],[1,4,2,5,3].\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[3,2,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">3</span>\r\n<strong>Explanation: </strong>The 3 valid subarrays are: [3],[2],[1].\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[2,2,2]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">6</span>\r\n<strong>Explanation: </strong>There are 6 valid subarrays: [2],[2],[2],[2,2],[2,2],[2,2,2].\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 50000</code></li>\r\n\t<li><code>0 &lt;= A[i] &lt;= 100000</code></li>\r\n</ol>",
  "isPaidOnly": true,
  "difficulty": "Hard",
  "likes": 52,
  "dislikes": 7,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "lihuoran",
      "profileUrl": "/lihuoran/",
      "avatarUrl": "https://assets.leetcode.com/users/lihuoran/avatar_1517384561.png"
    }
  ],
  "topicTags": [
    {
      "name": "Stack",
      "slug": "stack"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Hulu\", \"slug\": \"hulu\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\r\npublic:\r\n    int validSubarrays(vector<int>& nums) {\r\n        \r\n    }\r\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int validSubarrays(int[] nums) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def validSubarrays(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def validSubarrays(self, nums: List[int]) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint validSubarrays(int* nums, int numsSize){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\r\n    public int ValidSubarrays(int[] nums) {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number[]} nums\n * @return {number}\n */\nvar validSubarrays = function(nums) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer[]} nums\r\n# @return {Integer}\r\ndef valid_subarrays(nums)\r\n    \r\nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\r\n    func validSubarrays(_ nums: [Int]) -> Int {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Go",
      "code": "func validSubarrays(nums []int) int {\r\n    \r\n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\r\n    def validSubarrays(nums: Array[Int]): Int = {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\r\n    fun validSubarrays(nums: IntArray): Int {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn valid_subarrays(nums: Vec<i32>) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Integer\n     */\n    function validSubarrays($nums) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"2.1K\", \"totalSubmission\": \"2.9K\", \"totalAcceptedRaw\": 2093, \"totalSubmissionRaw\": 2944, \"acRate\": \"71.1%\"}",
  "hints": [
    "Given a data structure that answers queries of the type to find the minimum in a range of an array (Range minimum query (RMQ) sparse table) in O(1) time. How can you solve this problem?",
    "For each starting index do a binary search with an RMQ to find the ending possible position."
  ],
  "solution": null,
  "status": null,
  "sampleTestCase": "[1,4,2,5,3]",
  "metaData": "{\r\n  \"name\": \"validSubarrays\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"nums\",\r\n      \"type\": \"integer[]\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}\r\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
