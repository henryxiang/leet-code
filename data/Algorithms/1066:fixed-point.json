{
  "questionId": "1066",
  "questionFrontendId": "1064",
  "boundTopicId": null,
  "title": "Fixed Point",
  "titleSlug": "fixed-point",
  "categoryTitle": "Algorithms",
  "content": "<p>Given an array <code>A</code> of distinct integers sorted in ascending order, return the smallest index <code>i</code> that satisfies <code>A[i] == i</code>.&nbsp; Return <code>-1</code> if no such <code>i</code> exists.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[-10,-5,0,3,7]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\r\n<strong>Explanation: </strong>\r\nFor the given array, <code>A[0] = -10, A[1] = -5, A[2] = 0, A[3] = 3</code>, thus the output is 3.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[0,2,5,8,17]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">0</span>\r\n<strong>Explanation: </strong>\r\n<code>A[0] = 0</code>, thus the output is 0.\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[-10,-5,3,4,7,9]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">-1</span>\r\n<strong>Explanation: </strong>\r\nThere is no such <code>i</code> that <code>A[i] = i</code>, thus the output is -1.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt; 10^4</code></li>\r\n\t<li><code>-10^9 &lt;= A[i] &lt;= 10^9</code></li>\r\n</ol>\r\n",
  "isPaidOnly": true,
  "difficulty": "Easy",
  "likes": 100,
  "dislikes": 32,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "XuhuiWang",
      "profileUrl": "/xuhuiwang/",
      "avatarUrl": "https://assets.leetcode.com/users/xuhuiwang/avatar_1545284207.png"
    }
  ],
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Binary Search",
      "slug": "binary-search"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Uber\", \"slug\": \"uber\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    int fixedPoint(vector<int>& A) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int fixedPoint(int[] A) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def fixedPoint(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def fixedPoint(self, A: List[int]) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint fixedPoint(int* A, int ASize){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\r\n    public int FixedPoint(int[] A) {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number[]} A\n * @return {number}\n */\nvar fixedPoint = function(A) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer[]} a\n# @return {Integer}\ndef fixed_point(a)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\r\n    func fixedPoint(_ A: [Int]) -> Int {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Go",
      "code": "func fixedPoint(A []int) int {\r\n    \r\n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\r\n    def fixedPoint(A: Array[Int]): Int = {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\r\n    fun fixedPoint(A: IntArray): Int {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn fixed_point(a: Vec<i32>) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer[] $A\n     * @return Integer\n     */\n    function fixedPoint($A) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"12.6K\", \"totalSubmission\": \"18K\", \"totalAcceptedRaw\": 12589, \"totalSubmissionRaw\": 17967, \"acRate\": \"70.1%\"}",
  "hints": [
    "Loop over the array and check the first index i such A[i] == i"
  ],
  "solution": null,
  "status": null,
  "sampleTestCase": "[-10,-5,0,3,7]",
  "metaData": "{\r\n  \"name\": \"fixedPoint\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"A\",\r\n      \"type\": \"integer[]\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}\r\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
