{
  "questionId": "1071",
  "questionFrontendId": "1018",
  "boundTopicId": null,
  "title": "Binary Prefix Divisible By 5",
  "titleSlug": "binary-prefix-divisible-by-5",
  "categoryTitle": "Algorithms",
  "content": "<p>Given an array <code>A</code> of <code>0</code>s and <code>1</code>s, consider <code>N_i</code>: the i-th subarray from <code>A[0]</code> to <code>A[i]</code>&nbsp;interpreted&nbsp;as a binary number (from most-significant-bit to least-significant-bit.)</p>\r\n\r\n<p>Return a list of booleans&nbsp;<code>answer</code>, where <code>answer[i]</code> is <code>true</code>&nbsp;if and only if <code>N_i</code>&nbsp;is divisible by 5.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[0,1,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">[true,false,false]</span>\r\n<strong>Explanation: </strong>\r\nThe input numbers in binary are 0, 01, 011; which are 0, 1, and 3 in base-10.  Only the first number is divisible by 5, so answer[0] is true.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,1,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">[false,false,false]</span>\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[0,1,1,1,1,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">[true,false,false,false,true,false]</span>\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-4-1\">[1,1,1,0,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-4\">[false,false,false,false,false]</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 30000</code></li>\r\n\t<li><code>A[i]</code> is <code>0</code> or <code>1</code></li>\r\n</ol>\r\n",
  "isPaidOnly": false,
  "difficulty": "Easy",
  "likes": 142,
  "dislikes": 72,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [],
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    }
  ],
  "companyTagStats": "{\"1\": [], \"2\": [], \"3\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    vector<bool> prefixesDivBy5(vector<int>& A) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public List<Boolean> prefixesDivBy5(int[] A) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def prefixesDivBy5(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: List[bool]\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def prefixesDivBy5(self, A: List[int]) -> List[bool]:\n        "
    },
    {
      "lang": "C",
      "code": "\n\n/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nbool* prefixesDivBy5(int* A, int ASize, int* returnSize){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public IList<bool> PrefixesDivBy5(int[] A) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number[]} A\n * @return {boolean[]}\n */\nvar prefixesDivBy5 = function(A) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer[]} a\n# @return {Boolean[]}\ndef prefixes_div_by5(a)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func prefixesDivBy5(_ A: [Int]) -> [Bool] {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func prefixesDivBy5(A []int) []bool {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def prefixesDivBy5(A: Array[Int]): Array[Boolean] = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun prefixesDivBy5(A: IntArray): BooleanArray {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn prefixes_div_by5(a: Vec<i32>) -> Vec<bool> {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer[] $A\n     * @return Boolean[]\n     */\n    function prefixesDivBy5($A) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"16.2K\", \"totalSubmission\": \"34.5K\", \"totalAcceptedRaw\": 16232, \"totalSubmissionRaw\": 34541, \"acRate\": \"47.0%\"}",
  "hints": [
    "If X is the first i digits of the array as a binary number, then 2X + A[i] is the first i+1 digits."
  ],
  "solution": null,
  "status": null,
  "sampleTestCase": "[0,1,1]",
  "metaData": "{\n  \"name\": \"prefixesDivBy5\",\n  \"params\": [\n    {\n      \"name\": \"A\",\n      \"type\": \"integer[]\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"list<boolean>\"\n  }\n}\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
