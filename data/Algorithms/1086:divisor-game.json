{
  "questionId": "1086",
  "questionFrontendId": "1025",
  "boundTopicId": null,
  "title": "Divisor Game",
  "titleSlug": "divisor-game",
  "categoryTitle": "Algorithms",
  "content": "<p>Alice and Bob take turns playing a game, with Alice starting first.</p>\r\n\r\n<p>Initially, there is a number <code>N</code>&nbsp;on the chalkboard.&nbsp; On each player&#39;s turn, that player makes a <em>move</em>&nbsp;consisting of:</p>\r\n\r\n<ul>\r\n\t<li>Choosing&nbsp;any <code>x</code> with <code>0 &lt; x &lt; N</code> and <code>N % x == 0</code>.</li>\r\n\t<li>Replacing&nbsp;the number&nbsp;<code>N</code>&nbsp;on the chalkboard with <code>N - x</code>.</li>\r\n</ul>\r\n\r\n<p>Also, if a player cannot make a move, they lose the game.</p>\r\n\r\n<p>Return <code>True</code> if and only if Alice wins the game, assuming both players play optimally.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\r\n<strong>Explanation:</strong> Alice chooses 1, and Bob has no more moves.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\r\n<strong>Explanation:</strong> Alice chooses 1, Bob chooses 1, and Alice has no more moves.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= N &lt;= 1000</code></li>\r\n</ol>\r\n</div>\r\n</div>",
  "isPaidOnly": false,
  "difficulty": "Easy",
  "likes": 215,
  "dislikes": 609,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "coding4232",
      "profileUrl": "/coding4232/",
      "avatarUrl": "https://assets.leetcode.com/users/coding4232/avatar_1554483797.png"
    }
  ],
  "topicTags": [
    {
      "name": "Math",
      "slug": "math"
    },
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Visa\", \"slug\": \"visa\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\r\npublic:\r\n    bool divisorGame(int N) {\r\n        \r\n    }\r\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public boolean divisorGame(int N) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def divisorGame(self, N):\n        \"\"\"\n        :type N: int\n        :rtype: bool\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def divisorGame(self, N: int) -> bool:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nbool divisorGame(int N){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\r\n    public bool DivisorGame(int N) {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number} N\n * @return {boolean}\n */\nvar divisorGame = function(N) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer} n\r\n# @return {Boolean}\r\ndef divisor_game(n)\r\n    \r\nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\r\n    func divisorGame(_ N: Int) -> Bool {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Go",
      "code": "func divisorGame(N int) bool {\r\n    \r\n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\r\n    def divisorGame(N: Int): Boolean = {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\r\n    fun divisorGame(N: Int): Boolean {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn divisor_game(n: i32) -> bool {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer $N\n     * @return Boolean\n     */\n    function divisorGame($N) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"33K\", \"totalSubmission\": \"50.5K\", \"totalAcceptedRaw\": 33007, \"totalSubmissionRaw\": 50450, \"acRate\": \"65.4%\"}",
  "hints": [
    "If the current number is even, we can always subtract a 1 to make it odd.  If the current number is odd, we must subtract an odd number to make it even."
  ],
  "solution": null,
  "status": null,
  "sampleTestCase": "2",
  "metaData": "{\r\n  \"name\": \"divisorGame\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"N\",\r\n      \"type\": \"integer\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"boolean\"\r\n  }\r\n}\r\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
