{
  "questionId": "1096",
  "questionFrontendId": "1031",
  "boundTopicId": null,
  "title": "Maximum Sum of Two Non-Overlapping Subarrays",
  "titleSlug": "maximum-sum-of-two-non-overlapping-subarrays",
  "categoryTitle": "Algorithms",
  "content": "<p>Given an array <code>A</code> of non-negative integers, return the maximum sum of elements in two non-overlapping (contiguous) subarrays, which have lengths&nbsp;<code>L</code> and <code>M</code>.&nbsp; (For clarification, the <code>L</code>-length subarray could occur before or after the <code>M</code>-length subarray.)</p>\r\n\r\n<p>Formally,&nbsp;return the largest <code>V</code> for which&nbsp;<code>V = (A[i] + A[i+1] + ... + A[i+L-1]) + (A[j] + A[j+1] + ... + A[j+M-1])</code> and either:</p>\r\n\r\n<ul>\r\n\t<li><code>0 &lt;= i &lt; i + L - 1 &lt; j &lt; j + M - 1 &lt; A.length</code>, <strong>or</strong></li>\r\n\t<li><code>0 &lt;= j &lt; j + M - 1 &lt; i &lt; i + L - 1 &lt; A.length</code>.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[0,6,5,2,2,5,1,9,4]</span>, L = <span id=\"example-input-1-2\">1</span>, M = <span id=\"example-input-1-3\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">20\r\n<strong>Explanation:</strong> One choice of subarrays is [9] with length 1, and [6,5] with length 2.</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[3,8,1,3,2,1,8,9,0]</span>, L = <span id=\"example-input-2-2\">3</span>, M = <span id=\"example-input-2-3\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">29\r\n</span><span id=\"example-output-1\"><strong>Explanation:</strong> One choice of subarrays is</span><span> [3,8,1] with length 3, and [8,9] with length 2.</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">[2,1,5,6,0,9,5,0,3,8]</span>, L = <span id=\"example-input-3-2\">4</span>, M = <span id=\"example-input-3-3\">3</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">31\r\n</span><span id=\"example-output-1\"><strong>Explanation:</strong> One choice of subarrays is</span><span> [5,6,0,9] with length 4, and [3,8] with length 3.</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>L &gt;= 1</code></li>\r\n\t<li><code>M &gt;= 1</code></li>\r\n\t<li><code>L + M &lt;= A.length &lt;= 1000</code></li>\r\n\t<li><code>0 &lt;= A[i] &lt;= 1000</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n",
  "isPaidOnly": false,
  "difficulty": "Medium",
  "likes": 319,
  "dislikes": 20,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "graceliu0511",
      "profileUrl": "/graceliu0511/",
      "avatarUrl": "https://www.gravatar.com/avatar/60ed4ab5a8f9f75273c04af6bc9672b1.png?s=200"
    }
  ],
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    }
  ],
  "companyTagStats": "{\"1\": [{\"taggedByAdmin\": false, \"name\": \"Google\", \"slug\": \"google\", \"timesEncountered\": 2}, {\"taggedByAdmin\": false, \"name\": \"Snapchat\", \"slug\": \"snapchat\", \"timesEncountered\": 2}], \"2\": [], \"3\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\r\npublic:\r\n    int maxSumTwoNoOverlap(vector<int>& A, int L, int M) {\r\n        \r\n    }\r\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int maxSumTwoNoOverlap(int[] A, int L, int M) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def maxSumTwoNoOverlap(self, A, L, M):\n        \"\"\"\n        :type A: List[int]\n        :type L: int\n        :type M: int\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def maxSumTwoNoOverlap(self, A: List[int], L: int, M: int) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint maxSumTwoNoOverlap(int* A, int ASize, int L, int M){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\r\n    public int MaxSumTwoNoOverlap(int[] A, int L, int M) {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number[]} A\n * @param {number} L\n * @param {number} M\n * @return {number}\n */\nvar maxSumTwoNoOverlap = function(A, L, M) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer[]} a\r\n# @param {Integer} l\r\n# @param {Integer} m\r\n# @return {Integer}\r\ndef max_sum_two_no_overlap(a, l, m)\r\n    \r\nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\r\n    func maxSumTwoNoOverlap(_ A: [Int], _ L: Int, _ M: Int) -> Int {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Go",
      "code": "func maxSumTwoNoOverlap(A []int, L int, M int) int {\r\n    \r\n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\r\n    def maxSumTwoNoOverlap(A: Array[Int], L: Int, M: Int): Int = {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\r\n    fun maxSumTwoNoOverlap(A: IntArray, L: Int, M: Int): Int {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn max_sum_two_no_overlap(a: Vec<i32>, l: i32, m: i32) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer[] $A\n     * @param Integer $L\n     * @param Integer $M\n     * @return Integer\n     */\n    function maxSumTwoNoOverlap($A, $L, $M) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"11.5K\", \"totalSubmission\": \"20.7K\", \"totalAcceptedRaw\": 11470, \"totalSubmissionRaw\": 20710, \"acRate\": \"55.4%\"}",
  "hints": [
    "We can use prefix sums to calculate any subarray sum quickly.\r\nFor each L length subarray, find the best possible M length subarray that occurs before and after it."
  ],
  "solution": null,
  "status": null,
  "sampleTestCase": "[0,6,5,2,2,5,1,9,4]\n1\n2",
  "metaData": "{\r\n  \"name\": \"maxSumTwoNoOverlap\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"A\",\r\n      \"type\": \"integer[]\"\r\n    },\r\n    {\r\n      \"name\": \"L\",\r\n      \"type\": \"integer\"\r\n    },\r\n    {\r\n      \"name\": \"M\",\r\n      \"type\": \"integer\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}\r\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
