{
  "questionId": "1101",
  "questionFrontendId": "1136",
  "boundTopicId": null,
  "title": "Parallel Courses",
  "titleSlug": "parallel-courses",
  "categoryTitle": "Algorithms",
  "content": "<p>There are <code>N</code> courses, labelled from 1 to <code>N</code>.</p>\r\n\r\n<p>We are given&nbsp;<code>relations[i] = [X, Y]</code>, representing a prerequisite relationship between course <code>X</code> and course <code>Y</code>:&nbsp;course <code>X</code>&nbsp;has to be studied before course <code>Y</code>.</p>\r\n\r\n<p>In one semester you can study any number of courses as long as you have studied all the prerequisites for the course you are studying.</p>\r\n\r\n<p>Return the minimum number of semesters needed to study all courses.&nbsp; If there is no way to study all the courses, return <code>-1</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/04/20/1316_ex1.png\" style=\"width: 126px; height: 101px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>N = <span id=\"example-input-1-1\">3</span>, relations = <span id=\"example-input-1-2\">[[1,3],[2,3]]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\r\n<strong>Explanation: </strong>\r\nIn the first semester, courses 1 and 2 are studied. In the second semester, course 3 is studied.\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/04/20/1316_ex2.png\" style=\"width: 126px; height: 101px;\" /></strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>N = <span id=\"example-input-2-1\">3</span>, relations = <span id=\"example-input-2-2\">[[1,2],[2,3],[3,1]]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">-1</span>\r\n<strong>Explanation: </strong>\r\nNo course can be studied because they depend on each other.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span>Note:</span></strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= N &lt;= 5000</code></li>\r\n\t<li><code>1 &lt;= relations.length &lt;= 5000</code></li>\r\n\t<li><code>relations[i][0] != relations[i][1]</code></li>\r\n\t<li>There are no repeated relations in the input.</li>\r\n</ol>\r\n",
  "isPaidOnly": true,
  "difficulty": "Hard",
  "likes": 63,
  "dislikes": 3,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "ngoc_lam",
      "profileUrl": "/ngoc_lam/",
      "avatarUrl": "https://assets.leetcode.com/users/ngoc_lam/avatar_1528594557.png"
    }
  ],
  "topicTags": [
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    },
    {
      "name": "Depth-first Search",
      "slug": "depth-first-search"
    },
    {
      "name": "Graph",
      "slug": "graph"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Google\", \"slug\": \"google\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    int minimumSemesters(int N, vector<vector<int>>& relations) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int minimumSemesters(int N, int[][] relations) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def minimumSemesters(self, N, relations):\n        \"\"\"\n        :type N: int\n        :type relations: List[List[int]]\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def minimumSemesters(self, N: int, relations: List[List[int]]) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint minimumSemesters(int N, int** relations, int relationsSize, int* relationsColSize){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public int MinimumSemesters(int N, int[][] relations) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number} N\n * @param {number[][]} relations\n * @return {number}\n */\nvar minimumSemesters = function(N, relations) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer} n\n# @param {Integer[][]} relations\n# @return {Integer}\ndef minimum_semesters(n, relations)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func minimumSemesters(_ N: Int, _ relations: [[Int]]) -> Int {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func minimumSemesters(N int, relations [][]int) int {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def minimumSemesters(N: Int, relations: Array[Array[Int]]): Int = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun minimumSemesters(N: Int, relations: Array<IntArray>): Int {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn minimum_semesters(n: i32, relations: Vec<Vec<i32>>) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer $N\n     * @param Integer[][] $relations\n     * @return Integer\n     */\n    function minimumSemesters($N, $relations) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"3.1K\", \"totalSubmission\": \"5.2K\", \"totalAcceptedRaw\": 3085, \"totalSubmissionRaw\": 5234, \"acRate\": \"58.9%\"}",
  "hints": [
    "Try to think of it as a graph problem.",
    "When will be impossible to study all the courses?",
    "What if the directed graph has a cycle?",
    "If you build a graph using the relations, what would be the graph type?",
    "So the graph is a directed acyclic graph (DAG).",
    "Imagine having a long path in the DAG, what can you say about the answer then?",
    "How to find the longest path in a DAG?",
    "We can use DP in order to solve this."
  ],
  "solution": null,
  "status": null,
  "sampleTestCase": "3\n[[1,3],[2,3]]",
  "metaData": "{\r\n  \"name\": \"minimumSemesters\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"N\",\r\n      \"type\": \"integer\"\r\n    },\r\n    {\r\n      \"name\": \"relations\",\r\n      \"type\": \"integer[][]\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}\r\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
