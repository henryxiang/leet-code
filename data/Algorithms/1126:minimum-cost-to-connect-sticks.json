{
  "questionId": "1126",
  "questionFrontendId": "1167",
  "boundTopicId": null,
  "title": "Minimum Cost to Connect Sticks",
  "titleSlug": "minimum-cost-to-connect-sticks",
  "categoryTitle": "Algorithms",
  "content": "<p>You have some&nbsp;<code>sticks</code>&nbsp;with&nbsp;positive integer lengths.</p>\n\n<p>You can connect any two sticks of lengths <code>X</code> and <code>Y</code> into one stick&nbsp;by paying a cost of <code>X + Y</code>.&nbsp; You perform this action until there is one stick remaining.</p>\n\n<p>Return&nbsp;the minimum cost of connecting all the given <code>sticks</code> into one stick in this way.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> sticks = [2,4,3]\n<strong>Output:</strong> 14\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> sticks = [1,8,3,5]\n<strong>Output:</strong> 30\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code><span>1 &lt;= sticks.length &lt;= 10^4</span></code></li>\n\t<li><code><span>1 &lt;= sticks[i] &lt;= 10^4</span></code></li>\n</ul>\n",
  "isPaidOnly": true,
  "difficulty": "Medium",
  "likes": 133,
  "dislikes": 37,
  "isLiked": null,
  "similarQuestions": "[{\"title\": \"Minimum Cost to Merge Stones\", \"titleSlug\": \"minimum-cost-to-merge-stones\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
  "contributors": [],
  "topicTags": [
    {
      "name": "Greedy",
      "slug": "greedy"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Google\", \"slug\": \"google\", \"timesEncountered\": 0}], \"1\": [{\"taggedByAdmin\": false, \"name\": \"Amazon\", \"slug\": \"amazon\", \"timesEncountered\": 16}], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\r\npublic:\r\n    int connectSticks(vector<int>& sticks) {\r\n        \r\n    }\r\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int connectSticks(int[] sticks) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def connectSticks(self, sticks):\n        \"\"\"\n        :type sticks: List[int]\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def connectSticks(self, sticks: List[int]) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint connectSticks(int* sticks, int sticksSize){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\r\n    public int ConnectSticks(int[] sticks) {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number[]} sticks\n * @return {number}\n */\nvar connectSticks = function(sticks) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer[]} sticks\r\n# @return {Integer}\r\ndef connect_sticks(sticks)\r\n    \r\nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\r\n    func connectSticks(_ sticks: [Int]) -> Int {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Go",
      "code": "func connectSticks(sticks []int) int {\r\n    \r\n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\r\n    def connectSticks(sticks: Array[Int]): Int = {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\r\n    fun connectSticks(sticks: IntArray): Int {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn connect_sticks(sticks: Vec<i32>) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer[] $sticks\n     * @return Integer\n     */\n    function connectSticks($sticks) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"10.5K\", \"totalSubmission\": \"17.1K\", \"totalAcceptedRaw\": 10472, \"totalSubmissionRaw\": 17116, \"acRate\": \"61.2%\"}",
  "hints": [
    "How many times does every stick contribute to the answer?",
    "Some of the sticks will be used more than the others. Which sticks should be used the most/least?",
    "The sticks with long lengths cost a lot so we should use these the least.",
    "What if we keep merging the two shortest sticks?"
  ],
  "solution": null,
  "status": null,
  "sampleTestCase": "[2,4,3]",
  "metaData": "{\r\n  \"name\": \"connectSticks\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"sticks\",\r\n      \"type\": \"integer[]\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}\r\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
