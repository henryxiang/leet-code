{
  "questionId": "1160",
  "questionFrontendId": "1079",
  "boundTopicId": null,
  "title": "Letter Tile Possibilities",
  "titleSlug": "letter-tile-possibilities",
  "categoryTitle": "Algorithms",
  "content": "<p>You have a set of <code>tiles</code>, where each tile has one letter <code>tiles[i]</code> printed on it.&nbsp; Return the number of possible non-empty sequences of letters you can make.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;AAB&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">8</span>\r\n<strong>Explanation: </strong>The possible sequences are &quot;A&quot;, &quot;B&quot;, &quot;AA&quot;, &quot;AB&quot;, &quot;BA&quot;, &quot;AAB&quot;, &quot;ABA&quot;, &quot;BAA&quot;.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;AAABBC&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">188</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n</div>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= tiles.length &lt;= 7</code></li>\r\n\t<li><code>tiles</code> consists of uppercase English letters.</li>\r\n</ol>",
  "isPaidOnly": false,
  "difficulty": "Medium",
  "likes": 371,
  "dislikes": 18,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [],
  "topicTags": [
    {
      "name": "Backtracking",
      "slug": "backtracking"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Google\", \"slug\": \"google\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\r\npublic:\r\n    int numTilePossibilities(string tiles) {\r\n        \r\n    }\r\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int numTilePossibilities(String tiles) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def numTilePossibilities(self, tiles):\n        \"\"\"\n        :type tiles: str\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def numTilePossibilities(self, tiles: str) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint numTilePossibilities(char * tiles){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\r\n    public int NumTilePossibilities(string tiles) {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {string} tiles\n * @return {number}\n */\nvar numTilePossibilities = function(tiles) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {String} tiles\r\n# @return {Integer}\r\ndef num_tile_possibilities(tiles)\r\n    \r\nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\r\n    func numTilePossibilities(_ tiles: String) -> Int {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Go",
      "code": "func numTilePossibilities(tiles string) int {\r\n    \r\n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\r\n    def numTilePossibilities(tiles: String): Int = {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\r\n    fun numTilePossibilities(tiles: String): Int {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn num_tile_possibilities(tiles: String) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param String $tiles\n     * @return Integer\n     */\n    function numTilePossibilities($tiles) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"18.4K\", \"totalSubmission\": \"24.8K\", \"totalAcceptedRaw\": 18446, \"totalSubmissionRaw\": 24785, \"acRate\": \"74.4%\"}",
  "hints": [
    "Try to build the string with a backtracking DFS by considering what you can put in every position."
  ],
  "solution": null,
  "status": null,
  "sampleTestCase": "\"AAB\"",
  "metaData": "{\r\n  \"name\": \"numTilePossibilities\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"tiles\",\r\n      \"type\": \"string\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}\r\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
