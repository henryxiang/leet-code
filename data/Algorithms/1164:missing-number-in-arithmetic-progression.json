{
  "questionId": "1164",
  "questionFrontendId": "1228",
  "boundTopicId": null,
  "title": "Missing Number In Arithmetic Progression",
  "titleSlug": "missing-number-in-arithmetic-progression",
  "categoryTitle": "Algorithms",
  "content": "<p>In some array <code>arr</code>, the values were in arithmetic progression: the values&nbsp;<code>arr[i+1] - arr[i]</code>&nbsp;are all&nbsp;equal for every&nbsp;<code>0 &lt;= i &lt; arr.length - 1</code>.</p>\n\n<p>Then, a value from <code>arr</code>&nbsp;was removed that <strong>was&nbsp;not the first or last value in the array</strong>.</p>\n\n<p>Return the removed value.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [5,7,11,13]\n<strong>Output:</strong> 9\n<strong>Explanation: </strong>The previous array was [5,7,<strong>9</strong>,11,13].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [15,13,12]\n<strong>Output:</strong> 14\n<strong>Explanation: </strong>The previous array was [15,<strong>14</strong>,13,12].</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= arr.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= arr[i] &lt;= 10^5</code></li>\n</ul>\n",
  "isPaidOnly": true,
  "difficulty": "Easy",
  "likes": 51,
  "dislikes": 4,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [],
  "topicTags": [
    {
      "name": "Math",
      "slug": "math"
    }
  ],
  "companyTagStats": "{\"1\": [{\"taggedByAdmin\": true, \"name\": \"Audible\", \"slug\": \"audible\", \"timesEncountered\": 2}], \"2\": [], \"3\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    int missingNumber(vector<int>& arr) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int missingNumber(int[] arr) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def missingNumber(self, arr):\n        \"\"\"\n        :type arr: List[int]\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def missingNumber(self, arr: List[int]) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint missingNumber(int* arr, int arrSize){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public int MissingNumber(int[] arr) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number[]} arr\n * @return {number}\n */\nvar missingNumber = function(arr) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer[]} arr\n# @return {Integer}\ndef missing_number(arr)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func missingNumber(_ arr: [Int]) -> Int {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func missingNumber(arr []int) int {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def missingNumber(arr: Array[Int]): Int = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun missingNumber(arr: IntArray): Int {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn missing_number(arr: Vec<i32>) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer[] $arr\n     * @return Integer\n     */\n    function missingNumber($arr) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"4.5K\", \"totalSubmission\": \"8.6K\", \"totalAcceptedRaw\": 4512, \"totalSubmissionRaw\": 8565, \"acRate\": \"52.7%\"}",
  "hints": [
    "Assume the sequence is increasing, what if we find the largest consecutive difference?",
    "Is the missing element in the middle of the segment with the largest consecutive difference?",
    "For decreasing sequences, just reverse the array and do a similar process."
  ],
  "solution": null,
  "status": null,
  "sampleTestCase": "[5,7,11,13]",
  "metaData": "{\n  \"name\": \"missingNumber\",\n  \"params\": [\n    {\n      \"name\": \"arr\",\n      \"type\": \"integer[]\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer\"\n  }\n}\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
