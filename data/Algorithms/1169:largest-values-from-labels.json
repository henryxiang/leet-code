{
  "questionId": "1169",
  "questionFrontendId": "1090",
  "boundTopicId": null,
  "title": "Largest Values From Labels",
  "titleSlug": "largest-values-from-labels",
  "categoryTitle": "Algorithms",
  "content": "<p>We have a set of items: the <code>i</code>-th item has value <code>values[i]</code> and label <code>labels[i]</code>.</p>\r\n\r\n<p>Then, we choose&nbsp;a subset <code>S</code> of these items, such that:</p>\r\n\r\n<ul>\r\n\t<li><code>|S| &lt;= num_wanted</code></li>\r\n\t<li>For every label <code>L</code>, the number of items in <code>S</code> with&nbsp;label <code>L</code> is <code>&lt;= use_limit</code>.</li>\r\n</ul>\r\n\r\n<p>Return the largest possible sum of the subset <code>S</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>values = <span id=\"example-input-1-1\">[5,4,3,2,1]</span>, labels = <span id=\"example-input-1-2\">[1,1,2,2,3]</span>, <code>num_wanted </code>= <span id=\"example-input-1-3\">3</span>, use_limit = <span id=\"example-input-1-4\">1</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">9</span>\r\n<strong>Explanation: </strong>The subset chosen is the first, third, and fifth item.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>values = <span id=\"example-input-2-1\">[5,4,3,2,1]</span>, labels = <span id=\"example-input-2-2\">[1,3,3,3,2]</span>, <code>num_wanted </code>= <span id=\"example-input-2-3\">3</span>, use_limit = <span id=\"example-input-2-4\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">12</span>\r\n<strong>Explanation: </strong>The subset chosen is the first, second, and third item.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>values = <span id=\"example-input-3-1\">[9,8,8,7,6]</span>, labels = <span id=\"example-input-3-2\">[0,0,0,1,1]</span>, <code>num_wanted </code>= <span id=\"example-input-3-3\">3</span>, use_limit = <span id=\"example-input-3-4\">1</span>\r\n<strong>Output:</strong>&nbsp;16\r\n<strong>Explanation: </strong>The subset chosen is the first and fourth item.\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong>values = <span id=\"example-input-4-1\">[9,8,8,7,6]</span>, labels = <span id=\"example-input-4-2\">[0,0,0,1,1]</span>, <code>num_wanted </code>= <span id=\"example-input-4-3\">3</span>, use_limit = <span id=\"example-input-4-4\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-4\">24</span>\r\n<strong>Explanation: </strong>The subset chosen is the first, second, and fourth item.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= values.length == labels.length &lt;= 20000</code></li>\r\n\t<li><code>0 &lt;= values[i], labels[i]&nbsp;&lt;= 20000</code></li>\r\n\t<li><code>1 &lt;= num_wanted, use_limit&nbsp;&lt;= values.length</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n</div>",
  "isPaidOnly": false,
  "difficulty": "Medium",
  "likes": 59,
  "dislikes": 190,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "awice",
      "profileUrl": "/awice/",
      "avatarUrl": "https://assets.leetcode.com/users/awice/avatar_1576905115.png"
    }
  ],
  "topicTags": [
    {
      "name": "Hash Table",
      "slug": "hash-table"
    },
    {
      "name": "Greedy",
      "slug": "greedy"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Google\", \"slug\": \"google\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    int largestValsFromLabels(vector<int>& values, vector<int>& labels, int num_wanted, int use_limit) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int largestValsFromLabels(int[] values, int[] labels, int num_wanted, int use_limit) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def largestValsFromLabels(self, values, labels, num_wanted, use_limit):\n        \"\"\"\n        :type values: List[int]\n        :type labels: List[int]\n        :type num_wanted: int\n        :type use_limit: int\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def largestValsFromLabels(self, values: List[int], labels: List[int], num_wanted: int, use_limit: int) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint largestValsFromLabels(int* values, int valuesSize, int* labels, int labelsSize, int num_wanted, int use_limit){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public int LargestValsFromLabels(int[] values, int[] labels, int num_wanted, int use_limit) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number[]} values\n * @param {number[]} labels\n * @param {number} num_wanted\n * @param {number} use_limit\n * @return {number}\n */\nvar largestValsFromLabels = function(values, labels, num_wanted, use_limit) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer[]} values\n# @param {Integer[]} labels\n# @param {Integer} num_wanted\n# @param {Integer} use_limit\n# @return {Integer}\ndef largest_vals_from_labels(values, labels, num_wanted, use_limit)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func largestValsFromLabels(_ values: [Int], _ labels: [Int], _ num_wanted: Int, _ use_limit: Int) -> Int {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func largestValsFromLabels(values []int, labels []int, num_wanted int, use_limit int) int {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def largestValsFromLabels(values: Array[Int], labels: Array[Int], num_wanted: Int, use_limit: Int): Int = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun largestValsFromLabels(values: IntArray, labels: IntArray, num_wanted: Int, use_limit: Int): Int {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn largest_vals_from_labels(values: Vec<i32>, labels: Vec<i32>, num_wanted: i32, use_limit: i32) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer[] $values\n     * @param Integer[] $labels\n     * @param Integer $num_wanted\n     * @param Integer $use_limit\n     * @return Integer\n     */\n    function largestValsFromLabels($values, $labels, $num_wanted, $use_limit) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"8.3K\", \"totalSubmission\": \"14.2K\", \"totalAcceptedRaw\": 8258, \"totalSubmissionRaw\": 14235, \"acRate\": \"58.0%\"}",
  "hints": [
    "Consider the items in order from largest to smallest value, and greedily take the items if they fall under the use_limit.  We can keep track of how many items of each label are used by using a hash table."
  ],
  "solution": null,
  "status": null,
  "sampleTestCase": "[5,4,3,2,1]\n[1,1,2,2,3]\n3\n1",
  "metaData": "{\r\n  \"name\": \"largestValsFromLabels\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"values\",\r\n      \"type\": \"integer[]\"\r\n    },\r\n    {\r\n      \"name\": \"labels\",\r\n      \"type\": \"integer[]\"\r\n    },\r\n    {\r\n      \"name\": \"num_wanted\",\r\n      \"type\": \"integer\"\r\n    },\r\n    {\r\n      \"name\": \"use_limit\",\r\n      \"type\": \"integer\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}\r\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
