{
  "questionId": "120",
  "questionFrontendId": "120",
  "boundTopicId": null,
  "title": "Triangle",
  "titleSlug": "triangle",
  "categoryTitle": "Algorithms",
  "content": "<p>Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.</p>\r\n\r\n<p>For example, given the following triangle</p>\r\n\r\n<pre>\r\n[\r\n     [<strong>2</strong>],\r\n    [<strong>3</strong>,4],\r\n   [6,<strong>5</strong>,7],\r\n  [4,<strong>1</strong>,8,3]\r\n]\r\n</pre>\r\n\r\n<p>The minimum path sum from top to bottom is <code>11</code> (i.e., <strong>2</strong> + <strong>3</strong> + <strong>5</strong> + <strong>1</strong> = 11).</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<p>Bonus point if you are able to do this using only <em>O</em>(<em>n</em>) extra space, where <em>n</em> is the total number of rows in the triangle.</p>\r\n",
  "isPaidOnly": false,
  "difficulty": "Medium",
  "likes": 1467,
  "dislikes": 174,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [],
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    }
  ],
  "companyTagStats": "{\"1\": [{\"taggedByAdmin\": false, \"name\": \"Apple\", \"slug\": \"apple\", \"timesEncountered\": 2}], \"2\": [{\"taggedByAdmin\": false, \"name\": \"Amazon\", \"slug\": \"amazon\", \"timesEncountered\": 5}, {\"taggedByAdmin\": false, \"name\": \"Google\", \"slug\": \"google\", \"timesEncountered\": 2}, {\"taggedByAdmin\": false, \"name\": \"Bloomberg\", \"slug\": \"bloomberg\", \"timesEncountered\": 2}, {\"taggedByAdmin\": false, \"name\": \"Houzz\", \"slug\": \"houzz\", \"timesEncountered\": 2}], \"3\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    int minimumTotal(vector<vector<int>>& triangle) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int minimumTotal(List<List<Integer>> triangle) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def minimumTotal(self, triangle):\n        \"\"\"\n        :type triangle: List[List[int]]\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def minimumTotal(self, triangle: List[List[int]]) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint minimumTotal(int** triangle, int triangleSize, int* triangleColSize){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public int MinimumTotal(IList<IList<int>> triangle) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number[][]} triangle\n * @return {number}\n */\nvar minimumTotal = function(triangle) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer[][]} triangle\n# @return {Integer}\ndef minimum_total(triangle)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func minimumTotal(_ triangle: [[Int]]) -> Int {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func minimumTotal(triangle [][]int) int {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def minimumTotal(triangle: List[List[Int]]): Int = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun minimumTotal(triangle: List<List<Int>>): Int {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn minimum_total(triangle: Vec<Vec<i32>>) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer[][] $triangle\n     * @return Integer\n     */\n    function minimumTotal($triangle) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"212.7K\", \"totalSubmission\": \"510.7K\", \"totalAcceptedRaw\": 212711, \"totalSubmissionRaw\": 510713, \"acRate\": \"41.6%\"}",
  "hints": [],
  "solution": null,
  "status": null,
  "sampleTestCase": "[[2],[3,4],[6,5,7],[4,1,8,3]]",
  "metaData": "{\r\n  \"name\": \"minimumTotal\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"triangle\",\r\n      \"type\": \"list<list<integer>>\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
