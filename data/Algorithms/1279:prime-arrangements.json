{
  "questionId": "1279",
  "questionFrontendId": "1175",
  "boundTopicId": null,
  "title": "Prime Arrangements",
  "titleSlug": "prime-arrangements",
  "categoryTitle": "Algorithms",
  "content": "<p>Return the number of permutations of 1 to <code>n</code> so that prime numbers are at prime indices (1-indexed.)</p>\n\n<p><em>(Recall that an integer&nbsp;is prime if and only if it is greater than 1, and cannot be written as a product of two positive integers&nbsp;both smaller than it.)</em></p>\n\n<p>Since the answer may be large, return the answer <strong>modulo <code>10^9 + 7</code></strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5\n<strong>Output:</strong> 12\n<strong>Explanation:</strong> For example [1,2,5,4,3] is a valid permutation, but [5,2,3,4,1] is not because the prime number 5 is at index 1.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 100\n<strong>Output:</strong> 682289015\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n</ul>\n",
  "isPaidOnly": false,
  "difficulty": "Easy",
  "likes": 58,
  "dislikes": 127,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "TanishqSaluja",
      "profileUrl": "/tanishqsaluja/",
      "avatarUrl": "https://assets.leetcode.com/users/tanishqsaluja/avatar_1560692079.png"
    }
  ],
  "topicTags": [
    {
      "name": "Math",
      "slug": "math"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Amazon\", \"slug\": \"amazon\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    int numPrimeArrangements(int n) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int numPrimeArrangements(int n) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def numPrimeArrangements(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def numPrimeArrangements(self, n: int) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint numPrimeArrangements(int n){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public int NumPrimeArrangements(int n) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number} n\n * @return {number}\n */\nvar numPrimeArrangements = function(n) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer} n\n# @return {Integer}\ndef num_prime_arrangements(n)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func numPrimeArrangements(_ n: Int) -> Int {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func numPrimeArrangements(n int) int {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def numPrimeArrangements(n: Int): Int = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun numPrimeArrangements(n: Int): Int {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn num_prime_arrangements(n: i32) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer $n\n     * @return Integer\n     */\n    function numPrimeArrangements($n) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"7.8K\", \"totalSubmission\": \"15.5K\", \"totalAcceptedRaw\": 7810, \"totalSubmissionRaw\": 15519, \"acRate\": \"50.3%\"}",
  "hints": [
    "Solve the problem for prime numbers and composite numbers separately.",
    "Multiply the number of permutations of prime numbers over prime indices with the number of permutations of composite numbers over composite indices.",
    "The number of permutations equals the factorial."
  ],
  "solution": null,
  "status": null,
  "sampleTestCase": "5",
  "metaData": "{\n  \"name\": \"numPrimeArrangements\",\n  \"params\": [\n    {\n      \"name\": \"n\",\n      \"type\": \"integer\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer\"\n  }\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
