{
  "questionId": "1298",
  "questionFrontendId": "1190",
  "boundTopicId": null,
  "title": "Reverse Substrings Between Each Pair of Parentheses",
  "titleSlug": "reverse-substrings-between-each-pair-of-parentheses",
  "categoryTitle": "Algorithms",
  "content": "<p>You are given a string <code>s</code> that consists of lower case English letters and brackets.&nbsp;</p>\n\n<p>Reverse the strings&nbsp;in each&nbsp;pair of matching parentheses, starting&nbsp;from the innermost one.</p>\n\n<p>Your result should <strong>not</strong> contain any brackets.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;(abcd)&quot;\n<strong>Output:</strong> &quot;dcba&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;(u(love)i)&quot;\n<strong>Output:</strong> &quot;iloveu&quot;\n<strong>Explanation:</strong>&nbsp;The substring &quot;love&quot; is reversed first, then the whole string is reversed.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;(ed(et(oc))el)&quot;\n<strong>Output:</strong> &quot;leetcode&quot;\n<strong>Explanation:</strong>&nbsp;First, we reverse the substring &quot;oc&quot;, then &quot;etco&quot;, and finally, the whole string.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;a(bcdefghijkl(mno)p)q&quot;\n<strong>Output:</strong> &quot;apmnolkjihgfedcbq&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length &lt;= 2000</code></li>\n\t<li><code>s</code> only contains lower case English characters and parentheses.</li>\n\t<li>It&#39;s guaranteed that all parentheses are balanced.</li>\n</ul>\n",
  "isPaidOnly": false,
  "difficulty": "Medium",
  "likes": 179,
  "dislikes": 7,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "gneginskiy",
      "profileUrl": "/gneginskiy/",
      "avatarUrl": "https://assets.leetcode.com/users/gneginskiy/avatar_1566341049.png"
    }
  ],
  "topicTags": [
    {
      "name": "Stack",
      "slug": "stack"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Adobe\", \"slug\": \"adobe\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    string reverseParentheses(string s) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public String reverseParentheses(String s) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def reverseParentheses(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def reverseParentheses(self, s: str) -> str:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nchar * reverseParentheses(char * s){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public string ReverseParentheses(string s) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {string} s\n * @return {string}\n */\nvar reverseParentheses = function(s) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {String} s\n# @return {String}\ndef reverse_parentheses(s)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func reverseParentheses(_ s: String) -> String {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func reverseParentheses(s string) string {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def reverseParentheses(s: String): String = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun reverseParentheses(s: String): String {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn reverse_parentheses(s: String) -> String {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @return String\n     */\n    function reverseParentheses($s) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"9.9K\", \"totalSubmission\": \"16.8K\", \"totalAcceptedRaw\": 9862, \"totalSubmissionRaw\": 16829, \"acRate\": \"58.6%\"}",
  "hints": [
    "Find all brackets in the string.",
    "Does the order of the reverse matter ?",
    "The order does not matter."
  ],
  "solution": null,
  "status": null,
  "sampleTestCase": "\"(abcd)\"",
  "metaData": "{\n  \"name\": \"reverseParentheses\",\n  \"params\": [\n    {\n      \"name\": \"s\",\n      \"type\": \"string\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"string\"\n  }\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
