{
  "questionId": "1330",
  "questionFrontendId": "1218",
  "boundTopicId": null,
  "title": "Longest Arithmetic Subsequence of Given Difference",
  "titleSlug": "longest-arithmetic-subsequence-of-given-difference",
  "categoryTitle": "Algorithms",
  "content": "<p>Given an integer array <code>arr</code>&nbsp;and an integer <code><font face=\"monospace\">difference</font></code>, return the length of the longest subsequence in <font face=\"monospace\"><code>arr</code>&nbsp;</font>which is an arithmetic sequence such that the difference between adjacent elements in the subsequence equals&nbsp;<code>difference</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,3,4], difference = 1\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>The longest arithmetic subsequence is [1,2,3,4].</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,3,5,7], difference = 1\n<strong>Output:</strong> 1\n<strong>Explanation: </strong>The longest arithmetic subsequence is any single element.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,5,7,8,5,3,4,2,1], difference = -2\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>The longest arithmetic subsequence is [7,5,3,1].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 10^5</code></li>\n\t<li><code>-10^4 &lt;= arr[i], difference &lt;= 10^4</code></li>\n</ul>\n",
  "isPaidOnly": false,
  "difficulty": "Medium",
  "likes": 168,
  "dislikes": 16,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "zubaidullo",
      "profileUrl": "/zubaidullo/",
      "avatarUrl": "https://assets.leetcode.com/users/zubaidullo/avatar_1559459714.png"
    }
  ],
  "topicTags": [
    {
      "name": "Math",
      "slug": "math"
    },
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Google\", \"slug\": \"google\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    int longestSubsequence(vector<int>& arr, int difference) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int longestSubsequence(int[] arr, int difference) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def longestSubsequence(self, arr, difference):\n        \"\"\"\n        :type arr: List[int]\n        :type difference: int\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def longestSubsequence(self, arr: List[int], difference: int) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint longestSubsequence(int* arr, int arrSize, int difference){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public int LongestSubsequence(int[] arr, int difference) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number[]} arr\n * @param {number} difference\n * @return {number}\n */\nvar longestSubsequence = function(arr, difference) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer[]} arr\n# @param {Integer} difference\n# @return {Integer}\ndef longest_subsequence(arr, difference)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func longestSubsequence(_ arr: [Int], _ difference: Int) -> Int {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func longestSubsequence(arr []int, difference int) int {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def longestSubsequence(arr: Array[Int], difference: Int): Int = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun longestSubsequence(arr: IntArray, difference: Int): Int {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn longest_subsequence(arr: Vec<i32>, difference: i32) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer[] $arr\n     * @param Integer $difference\n     * @return Integer\n     */\n    function longestSubsequence($arr, $difference) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"9.3K\", \"totalSubmission\": \"22.8K\", \"totalAcceptedRaw\": 9274, \"totalSubmissionRaw\": 22813, \"acRate\": \"40.7%\"}",
  "hints": [
    "Use dynamic programming.",
    "Let dp[i] be the maximum length of a subsequence of the given difference whose last element is i.",
    "dp[i] = 1 + dp[i-k]"
  ],
  "solution": null,
  "status": null,
  "sampleTestCase": "[1,2,3,4]\n1",
  "metaData": "{\n  \"name\": \"longestSubsequence\",\n  \"params\": [\n    {\n      \"name\": \"arr\",\n      \"type\": \"integer[]\"\n    },\n    {\n      \"type\": \"integer\",\n      \"name\": \"difference\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer\"\n  }\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
