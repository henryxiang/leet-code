{
  "questionId": "1360",
  "questionFrontendId": "1239",
  "boundTopicId": null,
  "title": "Maximum Length of a Concatenated String with Unique Characters",
  "titleSlug": "maximum-length-of-a-concatenated-string-with-unique-characters",
  "categoryTitle": "Algorithms",
  "content": "<p>Given an array of strings <code>arr</code>. String <code>s</code> is a concatenation of a sub-sequence of <code>arr</code> which have <strong>unique characters</strong>.</p>\n\n<p>Return <em>the maximum possible length</em> of <code>s</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [&quot;un&quot;,&quot;iq&quot;,&quot;ue&quot;]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> All possible concatenations are &quot;&quot;,&quot;un&quot;,&quot;iq&quot;,&quot;ue&quot;,&quot;uniq&quot; and &quot;ique&quot;.\nMaximum length is 4.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [&quot;cha&quot;,&quot;r&quot;,&quot;act&quot;,&quot;ers&quot;]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> Possible solutions are &quot;chaers&quot; and &quot;acters&quot;.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [&quot;abcdefghijklmnopqrstuvwxyz&quot;]\n<strong>Output:</strong> 26\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 16</code></li>\n\t<li><code>1 &lt;= arr[i].length &lt;= 26</code></li>\n\t<li><code>arr[i]</code> contains only lower case English letters.</li>\n</ul>\n",
  "isPaidOnly": false,
  "difficulty": "Medium",
  "likes": 107,
  "dislikes": 20,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "sherzod99",
      "profileUrl": "/sherzod99/",
      "avatarUrl": "https://www.gravatar.com/avatar/c37d6b9d825f9bd6ef39fa1cba807450.png?s=200"
    }
  ],
  "topicTags": [
    {
      "name": "Backtracking",
      "slug": "backtracking"
    },
    {
      "name": "Bit Manipulation",
      "slug": "bit-manipulation"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"honey\", \"slug\": \"honey\", \"timesEncountered\": 0}], \"1\": [{\"taggedByAdmin\": false, \"name\": \"Microsoft\", \"slug\": \"microsoft\", \"timesEncountered\": 3}], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    int maxLength(vector<string>& arr) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int maxLength(List<String> arr) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def maxLength(self, arr):\n        \"\"\"\n        :type arr: List[str]\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def maxLength(self, arr: List[str]) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint maxLength(char ** arr, int arrSize){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public int MaxLength(IList<string> arr) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {string[]} arr\n * @return {number}\n */\nvar maxLength = function(arr) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {String[]} arr\n# @return {Integer}\ndef max_length(arr)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func maxLength(_ arr: [String]) -> Int {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func maxLength(arr []string) int {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def maxLength(arr: List[String]): Int = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun maxLength(arr: List<String>): Int {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn max_length(arr: Vec<String>) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param String[] $arr\n     * @return Integer\n     */\n    function maxLength($arr) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"7.2K\", \"totalSubmission\": \"16.7K\", \"totalAcceptedRaw\": 7167, \"totalSubmissionRaw\": 16740, \"acRate\": \"42.8%\"}",
  "hints": [
    "You can try all combinations and keep mask of characters you have.",
    "You can use DP."
  ],
  "solution": null,
  "status": null,
  "sampleTestCase": "[\"un\",\"iq\",\"ue\"]",
  "metaData": "{\n  \"name\": \"maxLength\",\n  \"params\": [\n    {\n      \"name\": \"arr\",\n      \"type\": \"list<string>\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer\"\n  }\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
