{
  "questionId": "1404",
  "questionFrontendId": "1265",
  "boundTopicId": null,
  "title": "Print Immutable Linked List in Reverse",
  "titleSlug": "print-immutable-linked-list-in-reverse",
  "categoryTitle": "Algorithms",
  "content": "<p>You are given an immutable linked list, print out all values of each node in reverse with the help of the following&nbsp;interface:</p>\n\n<ul>\n\t<li><code>ImmutableListNode</code>:&nbsp;An interface of immutable linked list, you are given the head of the list.</li>\n</ul>\n\n<p>You need to use the following functions to access the linked list (you <strong>can&#39;t</strong> access the <code>ImmutableListNode</code> directly):</p>\n\n<ul>\n\t<li><code>ImmutableListNode.printValue()</code>: Print value of the current node.</li>\n\t<li><code>ImmutableListNode.getNext()</code>: Return the next node.</li>\n</ul>\n\n<p>The input is only given to initialize the linked list internally.&nbsp;You must solve this problem without modifying the linked list. In other words, you must operate&nbsp;the linked list using only the mentioned&nbsp;APIs.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Follow up:</strong></p>\n\n<p>Could you solve this problem in:</p>\n\n<ul>\n\t<li>Constant space complexity?</li>\n\t<li>Linear time complexity and less than linear space complexity?</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1,2,3,4]\n<strong>Output:</strong> [4,3,2,1]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [0,-4,-1,3,-5]\n<strong>Output:</strong> [-5,3,-1,-4,0]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [-2,0,6,4,4,-6]\n<strong>Output:</strong> [-6,4,4,6,0,-2]\n</pre>\n\n<ul>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The length of the linked list&nbsp;is between <code>[1, 1000]</code>.</li>\n\t<li>The value of each&nbsp;node in the linked list&nbsp;is between <code>[-1000, 1000]</code>.</li>\n</ul>\n",
  "isPaidOnly": true,
  "difficulty": "Medium",
  "likes": 43,
  "dislikes": 8,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [],
  "topicTags": [],
  "companyTagStats": "{\"1\": [], \"2\": [], \"3\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "/**\n * // This is the ImmutableListNode's API interface.\n * // You should not implement it, or speculate about its implementation.\n * class ImmutableListNode {\n * public:\n *    void printValue(); // print the value of the node.\n *    ImmutableListNode* getNext(); // return the next node.\n * };\n */\n\nclass Solution {\npublic:\n    void printLinkedListInReverse(ImmutableListNode* head) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "/**\n * // This is the ImmutableListNode's API interface.\n * // You should not implement it, or speculate about its implementation.\n * interface ImmutableListNode {\n *     public void printValue(); // print the value of this node.\n *     public ImmutableListNode getNext(); // return the next node.\n * };\n */\n\nclass Solution {\n    public void printLinkedListInReverse(ImmutableListNode head) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "#   \"\"\"\n#   This is the ImmutableListNode's API interface.\n#   You should not implement it, or speculate about its implementation.\n#   \"\"\"\n#   class ImmutableListNode(object):\n#      def printValue(self): # print the value of this node.\n# .        \"\"\"\n#          :rtype None\n#          \"\"\"\n#\n#      def getNext(self): # return the next node.\n# .        \"\"\"\n#          :rtype ImmutableListNode\n#          \"\"\"\n\nclass Solution(object):\n    def printLinkedListInReverse(self, head):\n        \"\"\"\n        :type head: ImmutableListNode\n        :rtype: None\n        \"\"\"\n\t\t"
    },
    {
      "lang": "Python3",
      "code": "# \"\"\"\n# This is the ImmutableListNode's API interface.\n# You should not implement it, or speculate about its implementation.\n# \"\"\"\n# class ImmutableListNode:\n#     def printValue(self) -> None: # print the value of this node.\n#     def getNext(self) -> 'ImmutableListNode': # return the next node.\n\nclass Solution:\n    def printLinkedListInReverse(self, head: 'ImmutableListNode') -> None:\n        "
    },
    {
      "lang": "C#",
      "code": "/**\n * // This is the ImmutableListNode's API interface.\n * // You should not implement it, or speculate about its implementation.\n * class ImmutableListNode {\n *     public void PrintValue(); // print the value of this node.\n *     public ImmutableListNode GetNext(); // return the next node.\n * }\n */\n\npublic class Solution {\n    public void PrintLinkedListInReverse(ImmutableListNode head) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * // This is the ImmutableListNode's API interface.\n * // You should not implement it, or speculate about its implementation.\n * function ImmutableListNode() {\n *    @ return {void}\n *    this.printValue = function() { // print the value of this node.\n *       ...\n *    }; \n *\n *    @return {ImmutableListNode}\n *    this.getNext = function() { // return the next node.\n *       ...\n *    };\n * };\n */\n\n/**\n * @param {ImmutableListNode} head\n * @return {void}\n */\nvar printLinkedListInReverse = function(head) {\n    \n};"
    }
  ],
  "stats": "{\"totalAccepted\": \"1.8K\", \"totalSubmission\": \"1.9K\", \"totalAcceptedRaw\": 1804, \"totalSubmissionRaw\": 1895, \"acRate\": \"95.2%\"}",
  "hints": [],
  "solution": null,
  "status": null,
  "sampleTestCase": "[1,2,3,4]",
  "metaData": "{\n  \"name\": \"printOutLinkListinReverse\",\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"integer[]\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"list<integer>\"\n  },\n  \"manual\": true,\n  \"languages\": [\n    \"cpp\",\n    \"java\",\n    \"python\",\n    \"csharp\",\n    \"javascript\",\n    \"python3\"\n  ]\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
