{
  "questionId": "1422",
  "questionFrontendId": "1296",
  "boundTopicId": null,
  "title": "Divide Array in Sets of K Consecutive Numbers",
  "titleSlug": "divide-array-in-sets-of-k-consecutive-numbers",
  "categoryTitle": "Algorithms",
  "content": "<p>Given an array of integers&nbsp;<code>nums</code>&nbsp;and a positive integer&nbsp;<code>k</code>, find whether it&#39;s possible to divide this array into&nbsp;sets of <code>k</code> consecutive numbers<br />\r\nReturn&nbsp;<code>True</code>&nbsp;if its possible<strong>&nbsp;</strong>otherwise&nbsp;return&nbsp;<code>False</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [1,2,3,3,4,4,5,6], k = 4\r\n<strong>Output:</strong> true\r\n<strong>Explanation:</strong> Array can be divided into [1,2,3,4] and [3,4,5,6].\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [3,2,1,2,3,4,3,4,5,9,10,11], k = 3\r\n<strong>Output:</strong> true\r\n<strong>Explanation:</strong> Array can be divided into [1,2,3] , [2,3,4] , [3,4,5] and [9,10,11].\r\n</pre>\r\n\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [3,3,2,2,1,1], k = 3\r\n<strong>Output:</strong> true\r\n</pre>\r\n\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> nums = [1,2,3,4], k = 3\r\n<strong>Output:</strong> false\r\n<strong>Explanation:</strong> Each array should be divided in subarrays of size 3.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= nums.length &lt;= 10^5</code></li>\r\n\t<li><code>1 &lt;= nums[i] &lt;= 10^9</code></li>\r\n\t<li><code>1 &lt;= k &lt;= nums.length</code></li>\r\n</ul>",
  "isPaidOnly": false,
  "difficulty": "Medium",
  "likes": 72,
  "dislikes": 2,
  "isLiked": null,
  "similarQuestions": "[{\"title\": \"Split Array into Consecutive Subsequences\", \"titleSlug\": \"split-array-into-consecutive-subsequences\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
  "contributors": [],
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Greedy",
      "slug": "greedy"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Google\", \"slug\": \"google\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\r\npublic:\r\n    bool isPossibleDivide(vector<int>& nums, int k) {\r\n        \r\n    }\r\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\r\n    public boolean isPossibleDivide(int[] nums, int k) {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\r\n    def isPossibleDivide(self, nums, k):\r\n        \"\"\"\r\n        :type nums: List[int]\r\n        :type k: int\r\n        :rtype: bool\r\n        \"\"\""
    },
    {
      "lang": "Python3",
      "code": "class Solution:\r\n    def isPossibleDivide(self, nums: List[int], k: int) -> bool:"
    },
    {
      "lang": "C",
      "code": "bool isPossibleDivide(int* nums, int numsSize, int k){\r\n\r\n}"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\r\n    public bool IsPossibleDivide(int[] nums, int k) {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\r\n * @param {number[]} nums\r\n * @param {number} k\r\n * @return {boolean}\r\n */\r\nvar isPossibleDivide = function(nums, k) {\r\n    \r\n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer[]} nums\r\n# @param {Integer} k\r\n# @return {Boolean}\r\ndef is_possible_divide(nums, k)\r\n    \r\nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\r\n    func isPossibleDivide(_ nums: [Int], _ k: Int) -> Bool {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Go",
      "code": "func isPossibleDivide(nums []int, k int) bool {\r\n    \r\n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\r\n    def isPossibleDivide(nums: Array[Int], k: Int): Boolean = {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\r\n    fun isPossibleDivide(nums: IntArray, k: Int): Boolean {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\r\n    pub fn is_possible_divide(nums: Vec<i32>, k: i32) -> bool {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\r\n\r\n    /**\r\n     * @param Integer[] $nums\r\n     * @param Integer $k\r\n     * @return Boolean\r\n     */\r\n    function isPossibleDivide($nums, $k) {\r\n        \r\n    }\r\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"4.7K\", \"totalSubmission\": \"10K\", \"totalAcceptedRaw\": 4707, \"totalSubmissionRaw\": 10049, \"acRate\": \"46.8%\"}",
  "hints": [
    "If the smallest number in the possible-to-split array is V, then numbers V+1, V+2, ... V+k-1 must contain there as well.",
    "You can iteratively find k sets and remove them from array until it becomes empty.",
    "Failure to do so would mean that array is unsplittable."
  ],
  "solution": null,
  "status": null,
  "sampleTestCase": "[1,2,3,3,4,4,5,6]\n4",
  "metaData": "{\n  \"name\": \"isPossibleDivide\",\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"integer[]\"\n    },\n    {\n      \"type\": \"integer\",\n      \"name\": \"k\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"boolean\"\n  }\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
