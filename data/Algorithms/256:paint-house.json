{
  "questionId": "256",
  "questionFrontendId": "256",
  "boundTopicId": null,
  "title": "Paint House",
  "titleSlug": "paint-house",
  "categoryTitle": "Algorithms",
  "content": "<p>There are a row of <i>n</i> houses, each house can be painted with one of the three colors: red, blue or green. The cost of painting each house with a certain color is different. You have to paint all the houses such that no two adjacent houses have the same color.</p>\r\n\r\n<p>The cost of painting each house with a certain color is represented by a <code><i>n</i> x <i>3</i></code> cost matrix. For example, <code>costs[0][0]</code> is the cost of painting house 0 with color red; <code>costs[1][2]</code> is the cost of painting house 1 with color green, and so on... Find the minimum cost to paint all houses.</p>\r\n\r\n<p><b>Note:</b><br />\r\nAll costs are positive integers.</p>\r\n\r\n<p><strong>Example:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> [[17,2,17],[16,16,5],[14,3,19]]\r\n<strong>Output:</strong> 10\r\n<strong>Explanation: </strong>Paint house 0 into blue, paint house 1 into green, paint house 2 into blue. \r\n&nbsp;            Minimum cost: 2 + 5 + 3 = 10.\r\n</pre>\r\n",
  "isPaidOnly": true,
  "difficulty": "Easy",
  "likes": 550,
  "dislikes": 61,
  "isLiked": null,
  "similarQuestions": "[{\"title\": \"House Robber\", \"titleSlug\": \"house-robber\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"House Robber II\", \"titleSlug\": \"house-robber-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paint House II\", \"titleSlug\": \"paint-house-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Paint Fence\", \"titleSlug\": \"paint-fence\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
  "contributors": [],
  "topicTags": [
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    }
  ],
  "companyTagStats": "{\"1\": [{\"taggedByAdmin\": false, \"name\": \"Twitter\", \"slug\": \"twitter\", \"timesEncountered\": 17}, {\"taggedByAdmin\": true, \"name\": \"LinkedIn\", \"slug\": \"linkedin\", \"timesEncountered\": 5}], \"2\": [{\"taggedByAdmin\": false, \"name\": \"Apple\", \"slug\": \"apple\", \"timesEncountered\": 2}], \"3\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    int minCost(vector<vector<int>>& costs) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int minCost(int[][] costs) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def minCost(self, costs):\n        \"\"\"\n        :type costs: List[List[int]]\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def minCost(self, costs: List[List[int]]) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint minCost(int** costs, int costsSize, int* costsColSize){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public int MinCost(int[][] costs) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number[][]} costs\n * @return {number}\n */\nvar minCost = function(costs) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer[][]} costs\n# @return {Integer}\ndef min_cost(costs)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func minCost(_ costs: [[Int]]) -> Int {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func minCost(costs [][]int) int {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def minCost(costs: Array[Array[Int]]): Int = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun minCost(costs: Array<IntArray>): Int {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn min_cost(costs: Vec<Vec<i32>>) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer[][] $costs\n     * @return Integer\n     */\n    function minCost($costs) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"69.4K\", \"totalSubmission\": \"136.7K\", \"totalAcceptedRaw\": 69370, \"totalSubmissionRaw\": 136691, \"acRate\": \"50.7%\"}",
  "hints": [],
  "solution": null,
  "status": null,
  "sampleTestCase": "[[17,2,17],[16,16,5],[14,3,19]]",
  "metaData": "{\r\n  \"name\": \"minCost\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"costs\",\r\n      \"type\": \"integer[][]\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
