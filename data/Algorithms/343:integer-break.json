{
  "questionId": "343",
  "questionFrontendId": "343",
  "boundTopicId": null,
  "title": "Integer Break",
  "titleSlug": "integer-break",
  "categoryTitle": "Algorithms",
  "content": "<p>Given a positive integer <i>n</i>, break it into the sum of <b>at least</b> two positive integers and maximize the product of those integers. Return the maximum product you can get.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<div>\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">2</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\r\n<strong>Explanation: </strong>2 = 1 + 1, 1 &times; 1 = 1.</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">10</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">36</span>\r\n<strong>Explanation: </strong>10 = 3 + 3 + 4, 3 &times;&nbsp;3 &times;&nbsp;4 = 36.</pre>\r\n\r\n<p><b>Note</b>: You may assume that <i>n</i> is not less than 2 and not larger than 58.</p>\r\n</div>\r\n</div>",
  "isPaidOnly": false,
  "difficulty": "Medium",
  "likes": 740,
  "dislikes": 196,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "jianchao-li",
      "profileUrl": "/jianchao-li/",
      "avatarUrl": "https://assets.leetcode.com/users/jianchaolifighter/avatar_1529298385.png"
    }
  ],
  "topicTags": [
    {
      "name": "Math",
      "slug": "math"
    },
    {
      "name": "Dynamic Programming",
      "slug": "dynamic-programming"
    }
  ],
  "companyTagStats": "{\"2\": [{\"taggedByAdmin\": false, \"name\": \"Google\", \"slug\": \"google\", \"timesEncountered\": 2}], \"3\": [{\"taggedByAdmin\": false, \"name\": \"Tencent\", \"slug\": \"tencent\", \"timesEncountered\": 2}], \"1\": [{\"taggedByAdmin\": false, \"name\": \"Apple\", \"slug\": \"apple\", \"timesEncountered\": 3}]}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    int integerBreak(int n) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int integerBreak(int n) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def integerBreak(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def integerBreak(self, n: int) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint integerBreak(int n){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public int IntegerBreak(int n) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number} n\n * @return {number}\n */\nvar integerBreak = function(n) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer} n\n# @return {Integer}\ndef integer_break(n)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func integerBreak(_ n: Int) -> Int {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func integerBreak(n int) int {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def integerBreak(n: Int): Int = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun integerBreak(n: Int): Int {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn integer_break(n: i32) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer $n\n     * @return Integer\n     */\n    function integerBreak($n) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"92.7K\", \"totalSubmission\": \"189.3K\", \"totalAcceptedRaw\": 92742, \"totalSubmissionRaw\": 189298, \"acRate\": \"49.0%\"}",
  "hints": [
    "There is a simple O(n) solution to this problem.",
    "You may check the breaking results of <i>n</i> ranging from 7 to 10 to discover the regularities."
  ],
  "solution": null,
  "status": null,
  "sampleTestCase": "2",
  "metaData": "{\r\n  \"name\": \"integerBreak\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"n\",\r\n      \"type\": \"integer\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
