{
  "questionId": "345",
  "questionFrontendId": "345",
  "boundTopicId": null,
  "title": "Reverse Vowels of a String",
  "titleSlug": "reverse-vowels-of-a-string",
  "categoryTitle": "Algorithms",
  "content": "<p>Write a function that takes a string as input and reverse only the vowels of a string.</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;hello&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">&quot;holle&quot;</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;leetcode&quot;</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">&quot;leotcede&quot;</span></pre>\r\n</div>\r\n\r\n<p><b>Note:</b><br />\r\nThe vowels does not include the letter &quot;y&quot;.</p>\r\n\r\n<p>&nbsp;</p>\r\n",
  "isPaidOnly": false,
  "difficulty": "Easy",
  "likes": 494,
  "dislikes": 908,
  "isLiked": null,
  "similarQuestions": "[{\"title\": \"Reverse String\", \"titleSlug\": \"reverse-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Remove Vowels from a String\", \"titleSlug\": \"remove-vowels-from-a-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
  "contributors": [],
  "topicTags": [
    {
      "name": "Two Pointers",
      "slug": "two-pointers"
    },
    {
      "name": "String",
      "slug": "string"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Google\", \"slug\": \"google\", \"timesEncountered\": 4}], \"1\": [{\"taggedByAdmin\": false, \"name\": \"Amazon\", \"slug\": \"amazon\", \"timesEncountered\": 3}], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    string reverseVowels(string s) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public String reverseVowels(String s) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def reverseVowels(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def reverseVowels(self, s: str) -> str:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nchar * reverseVowels(char * s){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public string ReverseVowels(string s) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {string} s\n * @return {string}\n */\nvar reverseVowels = function(s) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {String} s\n# @return {String}\ndef reverse_vowels(s)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func reverseVowels(_ s: String) -> String {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func reverseVowels(s string) string {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def reverseVowels(s: String): String = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun reverseVowels(s: String): String {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn reverse_vowels(s: String) -> String {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @return String\n     */\n    function reverseVowels($s) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"185.4K\", \"totalSubmission\": \"434.4K\", \"totalAcceptedRaw\": 185429, \"totalSubmissionRaw\": 434381, \"acRate\": \"42.7%\"}",
  "hints": [],
  "solution": null,
  "status": null,
  "sampleTestCase": "\"hello\"",
  "metaData": "{ \r\n  \"name\": \"reverseVowels\",\r\n  \"params\": [\r\n    { \r\n      \"name\": \"s\",\r\n      \"type\": \"string\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"string\"\r\n  }\r\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
