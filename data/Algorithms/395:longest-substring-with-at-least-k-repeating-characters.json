{
  "questionId": "395",
  "questionFrontendId": "395",
  "boundTopicId": null,
  "title": "Longest Substring with At Least K Repeating Characters",
  "titleSlug": "longest-substring-with-at-least-k-repeating-characters",
  "categoryTitle": "Algorithms",
  "content": "<p>\r\nFind the length of the longest substring <b><i>T</i></b> of a given string (consists of lowercase letters only) such that every character in <b><i>T</i></b> appears no less than <i>k</i> times.\r\n</p>\r\n\r\n<p><b>Example 1:</b>\r\n<pre>\r\nInput:\r\ns = \"aaabb\", k = 3\r\n\r\nOutput:\r\n3\r\n\r\nThe longest substring is \"aaa\", as 'a' is repeated 3 times.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b>\r\n<pre>\r\nInput:\r\ns = \"ababbc\", k = 2\r\n\r\nOutput:\r\n5\r\n\r\nThe longest substring is \"ababb\", as 'a' is repeated 2 times and 'b' is repeated 3 times.\r\n</pre>\r\n</p>",
  "isPaidOnly": false,
  "difficulty": "Medium",
  "likes": 983,
  "dislikes": 86,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [],
  "topicTags": [],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": false, \"name\": \"Facebook\", \"slug\": \"facebook\", \"timesEncountered\": 3}, {\"taggedByAdmin\": true, \"name\": \"Baidu\", \"slug\": \"baidu\", \"timesEncountered\": 0}], \"2\": [{\"taggedByAdmin\": false, \"name\": \"Google\", \"slug\": \"google\", \"timesEncountered\": 2}, {\"taggedByAdmin\": false, \"name\": \"Amazon\", \"slug\": \"amazon\", \"timesEncountered\": 2}, {\"taggedByAdmin\": false, \"name\": \"Uber\", \"slug\": \"uber\", \"timesEncountered\": 2}], \"1\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    int longestSubstring(string s, int k) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int longestSubstring(String s, int k) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def longestSubstring(self, s, k):\n        \"\"\"\n        :type s: str\n        :type k: int\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def longestSubstring(self, s: str, k: int) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint longestSubstring(char * s, int k){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public int LongestSubstring(string s, int k) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {string} s\n * @param {number} k\n * @return {number}\n */\nvar longestSubstring = function(s, k) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {String} s\n# @param {Integer} k\n# @return {Integer}\ndef longest_substring(s, k)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func longestSubstring(_ s: String, _ k: Int) -> Int {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func longestSubstring(s string, k int) int {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def longestSubstring(s: String, k: Int): Int = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun longestSubstring(s: String, k: Int): Int {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn longest_substring(s: String, k: i32) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @param Integer $k\n     * @return Integer\n     */\n    function longestSubstring($s, $k) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"60.6K\", \"totalSubmission\": \"152.1K\", \"totalAcceptedRaw\": 60619, \"totalSubmissionRaw\": 152077, \"acRate\": \"39.9%\"}",
  "hints": [],
  "solution": null,
  "status": null,
  "sampleTestCase": "\"aaabb\"\n3",
  "metaData": "{\r\n  \"name\": \"longestSubstring\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"s\",\r\n      \"type\": \"string\"\r\n    },\r\n    {\r\n      \"name\": \"k\",\r\n      \"type\": \"integer\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
