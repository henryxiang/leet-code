{
  "questionId": "476",
  "questionFrontendId": "476",
  "boundTopicId": null,
  "title": "Number Complement",
  "titleSlug": "number-complement",
  "categoryTitle": "Algorithms",
  "content": "<p>Given a positive integer, output its complement number. The complement strategy is to flip the bits of its binary representation.</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The given integer is guaranteed to fit within the range of a 32-bit signed integer.</li>\r\n<li>You could assume no leading zero bit in the integerâ€™s binary representation.</li>\r\n</ol>\r\n</p>\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> 5\r\n<b>Output:</b> 2\r\n<b>Explanation:</b> The binary representation of 5 is 101 (no leading zero bits), and its complement is 010. So you need to output 2.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b> 1\r\n<b>Output:</b> 0\r\n<b>Explanation:</b> The binary representation of 1 is 1 (no leading zero bits), and its complement is 0. So you need to output 0.\r\n</pre>\r\n</p>",
  "isPaidOnly": false,
  "difficulty": "Easy",
  "likes": 624,
  "dislikes": 76,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "just_not_over_12",
      "profileUrl": "/just_not_over_12/",
      "avatarUrl": "https://www.gravatar.com/avatar/464d04f3923cca7da1660e31335cd246.png?s=200"
    }
  ],
  "topicTags": [
    {
      "name": "Bit Manipulation",
      "slug": "bit-manipulation"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Cloudera\", \"slug\": \"cloudera\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    int findComplement(int num) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int findComplement(int num) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def findComplement(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def findComplement(self, num: int) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint findComplement(int num){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public int FindComplement(int num) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number} num\n * @return {number}\n */\nvar findComplement = function(num) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer} num\n# @return {Integer}\ndef find_complement(num)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func findComplement(_ num: Int) -> Int {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func findComplement(num int) int {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def findComplement(num: Int): Int = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun findComplement(num: Int): Int {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn find_complement(num: i32) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer $num\n     * @return Integer\n     */\n    function findComplement($num) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"119.9K\", \"totalSubmission\": \"190.4K\", \"totalAcceptedRaw\": 119903, \"totalSubmissionRaw\": 190371, \"acRate\": \"63.0%\"}",
  "hints": [],
  "solution": null,
  "status": null,
  "sampleTestCase": "5",
  "metaData": "{\r\n  \"name\": \"findComplement\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"num\",\r\n      \"type\": \"integer\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}\r\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
