{
  "questionId": "479",
  "questionFrontendId": "479",
  "boundTopicId": null,
  "title": "Largest Palindrome Product",
  "titleSlug": "largest-palindrome-product",
  "categoryTitle": "Algorithms",
  "content": "<p>Find the largest palindrome made from the product of two n-digit numbers.</p>\r\n\r\n<p>Since the result could be very large, you should return the largest palindrome mod 1337.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Example:</b></p>\r\n\r\n<p>Input: 2</p>\r\n\r\n<p>Output: 987</p>\r\n\r\n<p>Explanation: 99 x 91 = 9009, 9009 % 1337 = 987</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><b>Note:</b></p>\r\n\r\n<p>The range of n is [1,8].</p>\r\n",
  "isPaidOnly": false,
  "difficulty": "Hard",
  "likes": 76,
  "dislikes": 1263,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "arash2012",
      "profileUrl": "/arash2012/",
      "avatarUrl": "https://www.gravatar.com/avatar/e8a9821d1e0cbd40f85829263ec9f739.png?s=200"
    }
  ],
  "topicTags": [],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": false, \"name\": \"Apple\", \"slug\": \"apple\", \"timesEncountered\": 3}, {\"taggedByAdmin\": true, \"name\": \"Yahoo\", \"slug\": \"yahoo\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    int largestPalindrome(int n) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int largestPalindrome(int n) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def largestPalindrome(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def largestPalindrome(self, n: int) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint largestPalindrome(int n){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public int LargestPalindrome(int n) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number} n\n * @return {number}\n */\nvar largestPalindrome = function(n) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer} n\n# @return {Integer}\ndef largest_palindrome(n)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func largestPalindrome(_ n: Int) -> Int {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func largestPalindrome(n int) int {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def largestPalindrome(n: Int): Int = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun largestPalindrome(n: Int): Int {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn largest_palindrome(n: i32) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer $n\n     * @return Integer\n     */\n    function largestPalindrome($n) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"15.8K\", \"totalSubmission\": \"56.1K\", \"totalAcceptedRaw\": 15754, \"totalSubmissionRaw\": 56126, \"acRate\": \"28.1%\"}",
  "hints": [],
  "solution": null,
  "status": null,
  "sampleTestCase": "1",
  "metaData": "{\r\n  \"name\": \"largestPalindrome\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"n\",\r\n      \"type\": \"integer\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}\r\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
