{
  "questionId": "532",
  "questionFrontendId": "532",
  "boundTopicId": null,
  "title": "K-diff Pairs in an Array",
  "titleSlug": "k-diff-pairs-in-an-array",
  "categoryTitle": "Algorithms",
  "content": "<p>\r\nGiven an array of integers and an integer <b>k</b>, you need to find the number of <b>unique</b> k-diff pairs in the array. Here a <b>k-diff</b> pair is defined as an integer pair (i, j), where <b>i</b> and <b>j</b> are both numbers in the array and their <a href = \"https://en.wikipedia.org/wiki/Absolute_difference\">absolute difference</a> is <b>k</b>.\r\n</p>\r\n\r\n\r\n<p><b>Example 1:</b><br />\r\n<pre>\r\n<b>Input:</b> [3, 1, 4, 1, 5], k = 2\r\n<b>Output:</b> 2\r\n<b>Explanation: </b>There are two 2-diff pairs in the array, (1, 3) and (3, 5).</br>Although we have two 1s in the input, we should only return the number of <b>unique</b> pairs.\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 2:</b><br />\r\n<pre>\r\n<b>Input:</b>[1, 2, 3, 4, 5], k = 1\r\n<b>Output: </b>4\r\n<b>Explanation:</b> There are four 1-diff pairs in the array, (1, 2), (2, 3), (3, 4) and (4, 5).\r\n</pre>\r\n</p>\r\n\r\n<p><b>Example 3:</b><br />\r\n<pre>\r\n<b>Input: </b>[1, 3, 1, 5, 4], k = 0\r\n<b>Output: </b>1\r\n<b>Explanation:</b> There is one 0-diff pair in the array, (1, 1).\r\n</pre>\r\n</p>\r\n\r\n<p><b>Note:</b><br>\r\n<ol>\r\n<li>The pairs (i, j) and (j, i) count as the same pair.</li>\r\n<li>The length of the array won't exceed 10,000.</li>\r\n<li>All the integers in the given input belong to the range: [-1e7, 1e7].</li>\r\n</ol>\r\n</p>",
  "isPaidOnly": false,
  "difficulty": "Easy",
  "likes": 433,
  "dislikes": 1010,
  "isLiked": null,
  "similarQuestions": "[{\"title\": \"Minimum Absolute Difference in BST\", \"titleSlug\": \"minimum-absolute-difference-in-bst\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
  "contributors": [
    {
      "username": "MuraliBandaru",
      "profileUrl": "/muralibandaru/",
      "avatarUrl": "https://www.gravatar.com/avatar/20fb01e988cdf6e40aeb6d8d9296a5e9.png?s=200"
    }
  ],
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Two Pointers",
      "slug": "two-pointers"
    }
  ],
  "companyTagStats": "{\"1\": [{\"taggedByAdmin\": false, \"name\": \"Twitter\", \"slug\": \"twitter\", \"timesEncountered\": 3}, {\"taggedByAdmin\": false, \"name\": \"Bloomberg\", \"slug\": \"bloomberg\", \"timesEncountered\": 2}, {\"taggedByAdmin\": false, \"name\": \"Twilio\", \"slug\": \"twilio\", \"timesEncountered\": 2}], \"3\": [{\"taggedByAdmin\": true, \"name\": \"Amazon\", \"slug\": \"amazon\", \"timesEncountered\": 3}, {\"taggedByAdmin\": false, \"name\": \"Paypal\", \"slug\": \"paypal\", \"timesEncountered\": 3}], \"2\": [{\"taggedByAdmin\": false, \"name\": \"Salesforce\", \"slug\": \"salesforce\", \"timesEncountered\": 2}]}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    int findPairs(vector<int>& nums, int k) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int findPairs(int[] nums, int k) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def findPairs(self, nums, k):\n        \"\"\"\n        :type nums: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def findPairs(self, nums: List[int], k: int) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint findPairs(int* nums, int numsSize, int k){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public int FindPairs(int[] nums, int k) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number[]} nums\n * @param {number} k\n * @return {number}\n */\nvar findPairs = function(nums, k) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer[]} nums\n# @param {Integer} k\n# @return {Integer}\ndef find_pairs(nums, k)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func findPairs(_ nums: [Int], _ k: Int) -> Int {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func findPairs(nums []int, k int) int {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def findPairs(nums: Array[Int], k: Int): Int = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun findPairs(nums: IntArray, k: Int): Int {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn find_pairs(nums: Vec<i32>, k: i32) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @param Integer $k\n     * @return Integer\n     */\n    function findPairs($nums, $k) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"81.1K\", \"totalSubmission\": \"264.5K\", \"totalAcceptedRaw\": 81146, \"totalSubmissionRaw\": 264532, \"acRate\": \"30.7%\"}",
  "hints": [],
  "solution": null,
  "status": null,
  "sampleTestCase": "[3,1,4,1,5]\n2",
  "metaData": "{\r\n  \"name\": \"findPairs\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"nums\",\r\n      \"type\": \"integer[]\"\r\n    },\r\n    {\r\n      \"name\": \"k\",\r\n      \"type\": \"integer\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}\r\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
