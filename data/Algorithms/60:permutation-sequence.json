{
  "questionId": "60",
  "questionFrontendId": "60",
  "boundTopicId": null,
  "title": "Permutation Sequence",
  "titleSlug": "permutation-sequence",
  "categoryTitle": "Algorithms",
  "content": "<p>The set <code>[1,2,3,...,<em>n</em>]</code> contains a total of <em>n</em>! unique permutations.</p>\r\n\r\n<p>By listing and labeling all of the permutations in order, we get the following sequence for <em>n</em> = 3:</p>\r\n\r\n<ol>\r\n\t<li><code>&quot;123&quot;</code></li>\r\n\t<li><code>&quot;132&quot;</code></li>\r\n\t<li><code>&quot;213&quot;</code></li>\r\n\t<li><code>&quot;231&quot;</code></li>\r\n\t<li><code>&quot;312&quot;</code></li>\r\n\t<li><code>&quot;321&quot;</code></li>\r\n</ol>\r\n\r\n<p>Given <em>n</em> and <em>k</em>, return the <em>k</em><sup>th</sup> permutation sequence.</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li>Given <em>n</em> will be between 1 and 9 inclusive.</li>\r\n\t<li>Given&nbsp;<em>k</em>&nbsp;will be between 1 and <em>n</em>! inclusive.</li>\r\n</ul>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 3, k = 3\r\n<strong>Output:</strong> &quot;213&quot;\r\n</pre>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> n = 4, k = 9\r\n<strong>Output:</strong> &quot;2314&quot;\r\n</pre>\r\n",
  "isPaidOnly": false,
  "difficulty": "Medium",
  "likes": 1098,
  "dislikes": 278,
  "isLiked": null,
  "similarQuestions": "[{\"title\": \"Next Permutation\", \"titleSlug\": \"next-permutation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutations\", \"titleSlug\": \"permutations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
  "contributors": [],
  "topicTags": [
    {
      "name": "Math",
      "slug": "math"
    },
    {
      "name": "Backtracking",
      "slug": "backtracking"
    }
  ],
  "companyTagStats": "{\"1\": [{\"taggedByAdmin\": false, \"name\": \"Amazon\", \"slug\": \"amazon\", \"timesEncountered\": 2}], \"3\": [{\"taggedByAdmin\": false, \"name\": \"Bloomberg\", \"slug\": \"bloomberg\", \"timesEncountered\": 2}, {\"taggedByAdmin\": false, \"name\": \"Google\", \"slug\": \"google\", \"timesEncountered\": 2}, {\"taggedByAdmin\": true, \"name\": \"Twitter\", \"slug\": \"twitter\", \"timesEncountered\": 0}], \"2\": [{\"taggedByAdmin\": false, \"name\": \"Microsoft\", \"slug\": \"microsoft\", \"timesEncountered\": 2}]}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    string getPermutation(int n, int k) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public String getPermutation(int n, int k) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def getPermutation(self, n, k):\n        \"\"\"\n        :type n: int\n        :type k: int\n        :rtype: str\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def getPermutation(self, n: int, k: int) -> str:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nchar * getPermutation(int n, int k){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public string GetPermutation(int n, int k) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number} n\n * @param {number} k\n * @return {string}\n */\nvar getPermutation = function(n, k) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer} n\n# @param {Integer} k\n# @return {String}\ndef get_permutation(n, k)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func getPermutation(_ n: Int, _ k: Int) -> String {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func getPermutation(n int, k int) string {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def getPermutation(n: Int, k: Int): String = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun getPermutation(n: Int, k: Int): String {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn get_permutation(n: i32, k: i32) -> String {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer $n\n     * @param Integer $k\n     * @return String\n     */\n    function getPermutation($n, $k) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"158.8K\", \"totalSubmission\": \"456.4K\", \"totalAcceptedRaw\": 158764, \"totalSubmissionRaw\": 456403, \"acRate\": \"34.8%\"}",
  "hints": [],
  "solution": null,
  "status": null,
  "sampleTestCase": "3\n3",
  "metaData": "{\r\n  \"name\": \"getPermutation\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"n\",\r\n      \"type\": \"integer\"\r\n    },\r\n    {\r\n      \"name\": \"k\",\r\n      \"type\": \"integer\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"string\"\r\n  }\r\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
