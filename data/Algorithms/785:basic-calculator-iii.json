{
  "questionId": "785",
  "questionFrontendId": "772",
  "boundTopicId": null,
  "title": "Basic Calculator III",
  "titleSlug": "basic-calculator-iii",
  "categoryTitle": "Algorithms",
  "content": "<p>Implement a basic calculator to evaluate a simple expression string.</p>\r\n\r\n<p>The expression string may contain open <code>(</code> and closing parentheses <code>)</code>, the plus <code>+</code> or minus sign <code>-</code>, <strong>non-negative</strong> integers and empty spaces <code> </code>.</p>\r\n\r\n<p>The expression string contains only non-negative integers, <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code> operators , open <code>(</code> and closing parentheses <code>)</code> and empty spaces <code> </code>. The integer division should truncate toward zero.</p>\r\n\r\n<p>You may assume that the given expression is always valid. All intermediate results will be in the range of <code>[-2147483648, 2147483647]</code>.</p>\r\n\r\n<p>Some examples:</p>\r\n\r\n<pre>\r\n&quot;1 + 1&quot; = 2\r\n&quot; 6-4 / 2 &quot; = 4\r\n&quot;2*(5+5*2)/3+(6/2+8)&quot; = 21\r\n&quot;(2+6* 3+5- (3*14/7+2)*5)+3&quot;=-12\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong> <strong>Do not</strong> use the <code>eval</code> built-in library function.</p>\r\n",
  "isPaidOnly": true,
  "difficulty": "Hard",
  "likes": 345,
  "dislikes": 126,
  "isLiked": null,
  "similarQuestions": "[{\"title\": \"Basic Calculator\", \"titleSlug\": \"basic-calculator\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator II\", \"titleSlug\": \"basic-calculator-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator IV\", \"titleSlug\": \"basic-calculator-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
  "contributors": [
    {
      "username": "Cyber233",
      "profileUrl": "/cyber233/",
      "avatarUrl": "https://www.gravatar.com/avatar/9d4fc4e0972eced14b1ab1fbb5a09f8e.png?s=200"
    }
  ],
  "topicTags": [
    {
      "name": "String",
      "slug": "string"
    },
    {
      "name": "Stack",
      "slug": "stack"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": false, \"name\": \"Pinterest\", \"slug\": \"pinterest\", \"timesEncountered\": 3}, {\"taggedByAdmin\": false, \"name\": \"Intuit\", \"slug\": \"intuit\", \"timesEncountered\": 2}, {\"taggedByAdmin\": false, \"name\": \"Salesforce\", \"slug\": \"salesforce\", \"timesEncountered\": 2}, {\"taggedByAdmin\": false, \"name\": \"Apple\", \"slug\": \"apple\", \"timesEncountered\": 2}, {\"taggedByAdmin\": true, \"name\": \"Jingchi\", \"slug\": \"jingchi\", \"timesEncountered\": 0}, {\"taggedByAdmin\": true, \"name\": \"Pocket Gems\", \"slug\": \"pocket-gems\", \"timesEncountered\": 0}, {\"taggedByAdmin\": true, \"name\": \"Hulu\", \"slug\": \"hulu\", \"timesEncountered\": 0}, {\"taggedByAdmin\": true, \"name\": \"Houzz\", \"slug\": \"houzz\", \"timesEncountered\": 0}, {\"taggedByAdmin\": true, \"name\": \"DoorDash\", \"slug\": \"doordash\", \"timesEncountered\": 0}], \"1\": [{\"taggedByAdmin\": false, \"name\": \"Amazon\", \"slug\": \"amazon\", \"timesEncountered\": 9}, {\"taggedByAdmin\": false, \"name\": \"Google\", \"slug\": \"google\", \"timesEncountered\": 4}, {\"taggedByAdmin\": true, \"name\": \"Microsoft\", \"slug\": \"microsoft\", \"timesEncountered\": 3}, {\"taggedByAdmin\": false, \"name\": \"Uber\", \"slug\": \"uber\", \"timesEncountered\": 3}, {\"taggedByAdmin\": false, \"name\": \"Facebook\", \"slug\": \"facebook\", \"timesEncountered\": 2}, {\"taggedByAdmin\": false, \"name\": \"Snapchat\", \"slug\": \"snapchat\", \"timesEncountered\": 2}], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\r\npublic:\r\n    int calculate(string s) {\r\n        \r\n    }\r\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int calculate(String s) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def calculate(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def calculate(self, s: str) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint calculate(char * s){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\r\n    public int Calculate(string s) {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {string} s\n * @return {number}\n */\nvar calculate = function(s) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {String} s\r\n# @return {Integer}\r\ndef calculate(s)\r\n    \r\nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\r\n    func calculate(_ s: String) -> Int {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Go",
      "code": "func calculate(s string) int {\r\n    \r\n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\r\n    def calculate(s: String): Int = {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\r\n    fun calculate(s: String): Int {\r\n        \r\n    }\r\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn calculate(s: String) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @return Integer\n     */\n    function calculate($s) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"27.1K\", \"totalSubmission\": \"66.1K\", \"totalAcceptedRaw\": 27066, \"totalSubmissionRaw\": 66077, \"acRate\": \"41.0%\"}",
  "hints": [],
  "solution": null,
  "status": null,
  "sampleTestCase": "\"1 + 1\"",
  "metaData": "{\r\n  \"name\": \"calculate\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"s\",\r\n      \"type\": \"string\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
