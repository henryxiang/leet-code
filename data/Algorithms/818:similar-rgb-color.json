{
  "questionId": "818",
  "questionFrontendId": "800",
  "boundTopicId": null,
  "title": "Similar RGB Color",
  "titleSlug": "similar-rgb-color",
  "categoryTitle": "Algorithms",
  "content": "<p>In the following, every capital letter represents some hexadecimal digit from <code>0</code> to <code>f</code>.</p>\r\n\r\n<p>The red-green-blue color <code>&quot;#AABBCC&quot;</code>&nbsp;can be written&nbsp;as&nbsp;<code>&quot;#ABC&quot;</code> in&nbsp;shorthand.&nbsp; For example, <code>&quot;#15c&quot;</code> is shorthand for the color <code>&quot;#1155cc&quot;</code>.</p>\r\n\r\n<p>Now, say the similarity between two colors <code>&quot;#ABCDEF&quot;</code> and <code>&quot;#UVWXYZ&quot;</code> is <code>-(AB - UV)^2 -&nbsp;(CD - WX)^2 -&nbsp;(EF - YZ)^2</code>.</p>\r\n\r\n<p>Given the color <code>&quot;#ABCDEF&quot;</code>, return a 7 character color&nbsp;that is most similar to <code>#ABCDEF</code>, and has a shorthand (that is, it can be represented as some <code>&quot;#XYZ&quot;</code></p>\r\n\r\n<pre>\r\n<strong>Example 1:</strong>\r\n<strong>Input:</strong> color = &quot;#09f166&quot;\r\n<strong>Output:</strong> &quot;#11ee66&quot;\r\n<strong>Explanation: </strong> \r\nThe similarity is -(0x09 - 0x11)^2 -(0xf1 - 0xee)^2 - (0x66 - 0x66)^2 = -64 -9 -0 = -73.\r\nThis is the highest among any shorthand color.\r\n</pre>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>color</code> is a string of length <code>7</code>.</li>\r\n\t<li><code>color</code> is a valid RGB color: for <code>i &gt; 0</code>, <code>color[i]</code> is a hexadecimal digit from <code>0</code> to <code>f</code></li>\r\n\t<li>Any answer which has the same (highest)&nbsp;similarity as the best answer will be accepted.</li>\r\n\t<li>All inputs and outputs should use lowercase letters, and the output is 7 characters.</li>\r\n</ul>\r\n",
  "isPaidOnly": true,
  "difficulty": "Easy",
  "likes": 48,
  "dislikes": 311,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "awice",
      "profileUrl": "/awice/",
      "avatarUrl": "https://assets.leetcode.com/users/awice/avatar_1576905115.png"
    }
  ],
  "topicTags": [
    {
      "name": "Math",
      "slug": "math"
    },
    {
      "name": "String",
      "slug": "string"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Google\", \"slug\": \"google\", \"timesEncountered\": 3}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    string similarRGB(string color) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public String similarRGB(String color) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def similarRGB(self, color):\n        \"\"\"\n        :type color: str\n        :rtype: str\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def similarRGB(self, color: str) -> str:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nchar * similarRGB(char * color){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public string SimilarRGB(string color) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {string} color\n * @return {string}\n */\nvar similarRGB = function(color) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {String} color\n# @return {String}\ndef similar_rgb(color)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func similarRGB(_ color: String) -> String {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func similarRGB(color string) string {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def similarRGB(color: String): String = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun similarRGB(color: String): String {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn similar_rgb(color: String) -> String {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param String $color\n     * @return String\n     */\n    function similarRGB($color) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"9.1K\", \"totalSubmission\": \"14.9K\", \"totalAcceptedRaw\": 9096, \"totalSubmissionRaw\": 14945, \"acRate\": \"60.9%\"}",
  "hints": [],
  "solution": {
    "id": "432",
    "canSeeDetail": true,
    "url": "/articles/similar-rgb-color/",
    "content": "[TOC]\r\n\r\n---\r\n#### Approach #1: Brute Force [Accepted]\r\n\r\n**Intuition**\r\n\r\nFor each possible shorthand-RGB color from `\"#000\"` to `\"#fff\"`, let's find it's similarity to the given color.  We'll take the best one.\r\n\r\n**Algorithm**\r\n\r\nThis problem is straightforward, but there are a few tricky implementation details.\r\n\r\nTo iterate over each shorthand color, we'll use an integer based approach, (though other ones exist.)  Each digit in the shorthand `\"#RGB\"` could be from 0 to 15.  This leads to a color of 17 * R * (1 << 16) + 17 * G * (1 << 8) + 17 * B.  The reason for the 17 is because a hexadecimal value of `0x22` is equal to `2 * 16 + 2 * 1` which is `2 * (17)`.  The other values for red and green work similarly, just shifted up by 8 or 16 bits.\r\n\r\nTo determine the similarity between two colors represented as integers, we'll sum the similarity of each of their colored components separately.  For a color like `hex1`, it has 3 colored components `r1 = (hex1 >> 16) % 256, g1 = (hex1 >> 8) % 256, b1 = (hex1 >> 0) % 256`.  Then, the first addend in the similarity is `-(r1 - r2) * (r1 - r2)`, etc.\r\n\r\nTo convert an integer back to a hex string, we'll use `String.format`.  The `06` refers to a zero padded string of length 6, while `x` refers to lowercase hexadecimal.\r\n\r\nFinally, it should be noted that the answer is always unique.  Indeed, for two numbers that differ by 17, every integer is closer to one than the other.  For example, with `0` and `17`, `8` is closer to `0` and `9` is closer to `17` - there is no number that is tied in closeness.\r\n\r\n<iframe src=\"https://leetcode.com/playground/QzxF7ePg/shared\" frameBorder=\"0\" width=\"100%\" height=\"480\" name=\"QzxF7ePg\"></iframe>\r\n\r\n**Complexity Analysis**\r\n\r\n* Time and Space Complexity:  $$O(1)$$.\r\n\r\n---\r\n#### Approach #2: Rounding By Component [Accepted]\r\n\r\n**Intuition and Algorithm**\r\n\r\nBecause color similarity is a sum of the similarity of individual color components, we can treat each colored component separately and combine the answer.\r\n\r\nAs in the previous approach, we want the colored component to be the closest to a multiple of 17.  We can just round it to the closest such value.\r\n\r\n<iframe src=\"https://leetcode.com/playground/BN77zpuQ/shared\" frameBorder=\"0\" width=\"100%\" height=\"242\" name=\"BN77zpuQ\"></iframe>\r\n\r\n**Complexity Analysis**\r\n\r\n* Time and Space Complexity:  $$O(1)$$.\r\n\r\n---\r\n\r\nAnalysis written by: [@awice](https://leetcode.com/awice).",
    "contentTypeId": "107",
    "rating": {
      "id": "427",
      "count": 32,
      "average": 1.906,
      "userRating": null
    }
  },
  "status": null,
  "sampleTestCase": "\"#09f166\"",
  "metaData": "{\r\n  \"name\": \"similarRGB\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"color\",\r\n      \"type\": \"string\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"string\"\r\n  }\r\n}\r\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
