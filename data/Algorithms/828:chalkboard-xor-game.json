{
  "questionId": "828",
  "questionFrontendId": "810",
  "boundTopicId": null,
  "title": "Chalkboard XOR Game",
  "titleSlug": "chalkboard-xor-game",
  "categoryTitle": "Algorithms",
  "content": "<p>We are given non-negative integers nums[i] which are written on a chalkboard.&nbsp; Alice and Bob take turns erasing exactly one number from the chalkboard, with Alice starting first.&nbsp; If erasing a number causes&nbsp;the bitwise XOR of all the elements of the chalkboard to become&nbsp;0, then that player loses.&nbsp; (Also, we&#39;ll say the bitwise XOR of one element is that element itself, and the bitwise XOR of no elements is 0.)</p>\r\n\r\n<p>Also, if any player starts their turn with the bitwise XOR of all the elements of the chalkboard equal to 0, then that player wins.</p>\r\n\r\n<p>Return True if and only if Alice wins the game, assuming both players play optimally.</p>\r\n\r\n<pre>\r\n<strong>Example:</strong>\r\n<strong>Input:</strong> nums = [1, 1, 2]\r\n<strong>Output:</strong> false\r\n<strong>Explanation:</strong> \r\nAlice has two choices: erase 1 or erase 2. \r\nIf she erases 1, the nums array becomes [1, 2]. The bitwise XOR of all the elements of the chalkboard is 1 XOR 2 = 3. Now Bob can remove any element he wants, because Alice will be the one to erase the last element and she will lose. \r\nIf Alice erases 2 first, now nums becomes [1, 1]. The bitwise XOR of all the elements of the chalkboard is 1 XOR 1 = 0. Alice will lose.\r\n\r\n</pre>\r\n\r\n<p><strong>Notes: </strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= N &lt;= 1000</code>.&nbsp;</li>\r\n\t<li><code>0 &lt;= nums[i] &lt;= 2^16</code>.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n",
  "isPaidOnly": false,
  "difficulty": "Hard",
  "likes": 49,
  "dislikes": 161,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "ngoc_lam",
      "profileUrl": "/ngoc_lam/",
      "avatarUrl": "https://assets.leetcode.com/users/ngoc_lam/avatar_1528594557.png"
    }
  ],
  "topicTags": [
    {
      "name": "Math",
      "slug": "math"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Garena\", \"slug\": \"garena\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    bool xorGame(vector<int>& nums) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public boolean xorGame(int[] nums) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def xorGame(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: bool\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def xorGame(self, nums: List[int]) -> bool:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nbool xorGame(int* nums, int numsSize){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public bool XorGame(int[] nums) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar xorGame = function(nums) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer[]} nums\n# @return {Boolean}\ndef xor_game(nums)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func xorGame(_ nums: [Int]) -> Bool {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func xorGame(nums []int) bool {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def xorGame(nums: Array[Int]): Boolean = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun xorGame(nums: IntArray): Boolean {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn xor_game(nums: Vec<i32>) -> bool {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Boolean\n     */\n    function xorGame($nums) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"3.3K\", \"totalSubmission\": \"7.1K\", \"totalAcceptedRaw\": 3263, \"totalSubmissionRaw\": 7100, \"acRate\": \"46.0%\"}",
  "hints": [],
  "solution": {
    "id": "443",
    "canSeeDetail": true,
    "url": "/articles/chalkboard-xor-game/",
    "content": "[TOC]\n\n---\n#### Approach #1: Mathematical [Accepted]\n\n**Intuition and Algorithm**\n\nAs in the problem statement, if the `XOR` of the entire array is `0`, then Alice wins.\n\nIf the `XOR` condition is never triggered, then clearly Alice wins if and only if there are an even number of elements, as every player always has a move.\n\nNow for the big leap in intuition.  Actually, Alice always has a move when there are an even number of elements.  If $$ S = x_1 \\oplus x_2 \\oplus \\cdots x_n \\neq 0 $$, but there are no possible moves ($$ S \\oplus x_i = 0 $$), then $$(S \\oplus x_1) \\oplus (S \\oplus x_2) \\oplus \\cdots \\oplus (S \\oplus x_n) = (S \\oplus \\cdots \\oplus S) \\oplus (x_1 \\oplus x_2 \\oplus \\cdots \\oplus x_n) = 0 \\oplus S \\neq 0$$, a contradiction.\n\nSimilarly, if there are an odd number of elements, then Bob always faces an even number of elements, and has a move.  So the answer is just the parity of the number of elements in the array.\n\nThose that are familiar with the Sprague-Grundy theorem may know that this game is a mis√®re-form game, meaning the theorem does not apply, and giving a big hint that there may exist a simpler solution.\n\n\n<iframe src=\"https://leetcode.com/playground/bz5ugFJG/shared\" frameBorder=\"0\" width=\"100%\" height=\"174\" name=\"bz5ugFJG\"></iframe>\n\n**Complexity Analysis**\n\n* Time Complexity:  $$O(N)$$, where $$N$$ is the length of `nums`.\n\n* Space Complexity: $$O(1)$$.\n\n---\n\nAnalysis written by: [@awice](https://leetcode.com/awice).",
    "contentTypeId": "107",
    "rating": {
      "id": "438",
      "count": 9,
      "average": 5,
      "userRating": null
    }
  },
  "status": null,
  "sampleTestCase": "[1,1,2]",
  "metaData": "{\r\n  \"name\": \"xorGame\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"nums\",\r\n      \"type\": \"integer[]\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"boolean\"\r\n  }\r\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
