{
  "questionId": "927",
  "questionFrontendId": "891",
  "boundTopicId": null,
  "title": "Sum of Subsequence Widths",
  "titleSlug": "sum-of-subsequence-widths",
  "categoryTitle": "Algorithms",
  "content": "<p>Given an array of integers <code>A</code>, consider all non-empty subsequences of <code>A</code>.</p>\r\n\r\n<p>For any sequence S, let the&nbsp;<em>width</em>&nbsp;of S be the difference between the maximum and minimum element of S.</p>\r\n\r\n<p>Return the sum of the widths of all subsequences of A.&nbsp;</p>\r\n\r\n<p>As the answer may be very large, <strong>return the answer modulo 10^9 + 7</strong>.</p>\r\n\r\n<div>\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[2,1,3]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">6</span>\r\n<strong>Explanation:\r\n</strong>Subsequences are [1], [2], [3], [2,1], [2,3], [1,3], [2,1,3].\r\nThe corresponding widths are 0, 0, 0, 1, 1, 2, 2.\r\nThe sum of these widths is 6.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= A.length &lt;= 20000</code></li>\r\n\t<li><code>1 &lt;= A[i] &lt;= 20000</code></li>\r\n</ul>\r\n</div>\r\n",
  "isPaidOnly": false,
  "difficulty": "Hard",
  "likes": 159,
  "dislikes": 88,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [],
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Math",
      "slug": "math"
    }
  ],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Sapient\", \"slug\": \"sapient\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    int sumSubseqWidths(vector<int>& A) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public int sumSubseqWidths(int[] A) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def sumSubseqWidths(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: int\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def sumSubseqWidths(self, A: List[int]) -> int:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nint sumSubseqWidths(int* A, int ASize){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public int SumSubseqWidths(int[] A) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number[]} A\n * @return {number}\n */\nvar sumSubseqWidths = function(A) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer[]} a\n# @return {Integer}\ndef sum_subseq_widths(a)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func sumSubseqWidths(_ A: [Int]) -> Int {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func sumSubseqWidths(A []int) int {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def sumSubseqWidths(A: Array[Int]): Int = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun sumSubseqWidths(A: IntArray): Int {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn sum_subseq_widths(a: Vec<i32>) -> i32 {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer[] $A\n     * @return Integer\n     */\n    function sumSubseqWidths($A) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"6.5K\", \"totalSubmission\": \"21.3K\", \"totalAcceptedRaw\": 6493, \"totalSubmissionRaw\": 21290, \"acRate\": \"30.5%\"}",
  "hints": [],
  "solution": {
    "id": "535",
    "canSeeDetail": true,
    "url": "/articles/sum-of-subsequence-widths/",
    "content": "[TOC]\n\n## Solution\n---\n#### Approach 1: Mathematical\n\n**Intuition**\n\nLet's try to count the number of subsequences with minimum `A[i]` and maximum `A[j]`.\n\n**Algorithm**\n\nWe can sort the array as it doesn't change the answer.  After sorting the array, this allows us to know that the number of subsequences with minimum `A[i]` and maximum `A[j]` is $$2^{j-i-1}$$.  Hence, the desired answer is:\n\n$$\n\\sum\\limits_{j > i} (2^{j-i-1}) (A_j - A_i)\n$$\n\n$$\n= \\big( \\sum\\limits_{i = 0}^{n-2} \\sum\\limits_{j = i+1}^{n-1} (2^{j-i-1}) (A_j) \\big) - \\big( \\sum\\limits_{i = 0}^{n-2} \\sum\\limits_{j = i+1}^{n-1} (2^{j-i-1}) (A_i) \\big)\n$$\n\n$$\n= \\big( (2^0 A_1 + 2^1 A_2 + 2^2 A_3 + \\cdots) + (2^0 A_2 + 2^1 A_3 + \\cdots) + (2^0 A_3 + 2^1 A_4 + \\cdots) + \\cdots \\big)\n$$\n$$\n - \\big( \\sum\\limits_{i = 0}^{n-2} (2^0 + 2^1 + \\cdots + 2^{N-i-2}) (A_i) \\big)\n$$\n\n$$\n= \\big( \\sum\\limits_{j = 1}^{n-1} (2^j - 1) A_j \\big) - \\big( \\sum\\limits_{i = 0}^{n-2} (2^{N-i-1} - 1) A_i \\big)\n$$\n\n$$\n= \\sum\\limits_{i = 0}^{n-1} \\big(((2^i - 1) A_i) - ((2^{N-i-1} - 1) A_i)\\big)\n$$\n\n$$\n= \\sum\\limits_{i = 0}^{n-1} (2^i - 2^{N-i-1}) A_i\n$$\n\n<iframe src=\"https://leetcode.com/playground/DmYZUfzN/shared\" frameBorder=\"0\" width=\"100%\" height=\"361\" name=\"DmYZUfzN\"></iframe>\n\n**Complexity Analysis**\n\n* Time Complexity:  $$O(N \\log N)$$, where $$N$$ is the length of `A`.\n\n* Space Complexity:  $$O(N)$$, the space used by `pow2`.  (We can improve this to $$O(1)$$ space by calculating these powers on the fly.)\n<br />\n<br />\n\n\n---\n\n\nAnalysis written by: [@awice](https://leetcode.com/awice).",
    "contentTypeId": "107",
    "rating": {
      "id": "528",
      "count": 13,
      "average": 4.154,
      "userRating": null
    }
  },
  "status": null,
  "sampleTestCase": "[2,1,3]",
  "metaData": "{\r\n  \"name\": \"sumSubseqWidths\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"A\",\r\n      \"type\": \"integer[]\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"integer\"\r\n  }\r\n}\r\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
