{
  "questionId": "932",
  "questionFrontendId": "896",
  "boundTopicId": null,
  "title": "Monotonic Array",
  "titleSlug": "monotonic-array",
  "categoryTitle": "Algorithms",
  "content": "<p>An array is <em>monotonic</em> if it is either monotone increasing or monotone decreasing.</p>\r\n\r\n<p>An array <code>A</code> is monotone increasing if for all <code>i &lt;= j</code>, <code>A[i] &lt;= A[j]</code>.&nbsp; An array <code>A</code> is monotone decreasing if for all <code>i &lt;= j</code>, <code>A[i] &gt;= A[j]</code>.</p>\r\n\r\n<p>Return <code>true</code> if and only if the given array <code>A</code> is monotonic.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<ol>\r\n</ol>\r\n\r\n<div>\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,2,3]</span>\r\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-2-1\">[6,5,4,4]</span>\r\n<strong>Output: </strong><span id=\"example-output-2\">true</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 3:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-3-1\">[1,3,2]</span>\r\n<strong>Output: </strong><span id=\"example-output-3\">false</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 4:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-4-1\">[1,2,4,5]</span>\r\n<strong>Output: </strong><span id=\"example-output-4\">true</span>\r\n</pre>\r\n\r\n<div>\r\n<p><strong>Example 5:</strong></p>\r\n\r\n<pre>\r\n<strong>Input: </strong><span id=\"example-input-5-1\">[1,1,1]</span>\r\n<strong>Output: </strong><span id=\"example-output-5\">true</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Note:</strong></p>\r\n\r\n<ol>\r\n\t<li><code>1 &lt;= A.length &lt;= 50000</code></li>\r\n\t<li><code>-100000 &lt;= A[i] &lt;= 100000</code></li>\r\n</ol>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n",
  "isPaidOnly": false,
  "difficulty": "Easy",
  "likes": 406,
  "dislikes": 31,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "davis_hopefulls",
      "profileUrl": "/davis_hopefulls/",
      "avatarUrl": "https://www.gravatar.com/avatar/cdc3e8c52cc55b335a29911dbb0ef91d.png?s=200"
    }
  ],
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    }
  ],
  "companyTagStats": "{\"1\": [{\"taggedByAdmin\": true, \"name\": \"Facebook\", \"slug\": \"facebook\", \"timesEncountered\": 11}], \"2\": [], \"3\": []}",
  "codeSnippets": [
    {
      "lang": "C++",
      "code": "class Solution {\npublic:\n    bool isMonotonic(vector<int>& A) {\n        \n    }\n};"
    },
    {
      "lang": "Java",
      "code": "class Solution {\n    public boolean isMonotonic(int[] A) {\n        \n    }\n}"
    },
    {
      "lang": "Python",
      "code": "class Solution(object):\n    def isMonotonic(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: bool\n        \"\"\"\n        "
    },
    {
      "lang": "Python3",
      "code": "class Solution:\n    def isMonotonic(self, A: List[int]) -> bool:\n        "
    },
    {
      "lang": "C",
      "code": "\n\nbool isMonotonic(int* A, int ASize){\n\n}\n\n"
    },
    {
      "lang": "C#",
      "code": "public class Solution {\n    public bool IsMonotonic(int[] A) {\n        \n    }\n}"
    },
    {
      "lang": "JavaScript",
      "code": "/**\n * @param {number[]} A\n * @return {boolean}\n */\nvar isMonotonic = function(A) {\n    \n};"
    },
    {
      "lang": "Ruby",
      "code": "# @param {Integer[]} a\n# @return {Boolean}\ndef is_monotonic(a)\n    \nend"
    },
    {
      "lang": "Swift",
      "code": "class Solution {\n    func isMonotonic(_ A: [Int]) -> Bool {\n        \n    }\n}"
    },
    {
      "lang": "Go",
      "code": "func isMonotonic(A []int) bool {\n    \n}"
    },
    {
      "lang": "Scala",
      "code": "object Solution {\n    def isMonotonic(A: Array[Int]): Boolean = {\n        \n    }\n}"
    },
    {
      "lang": "Kotlin",
      "code": "class Solution {\n    fun isMonotonic(A: IntArray): Boolean {\n        \n    }\n}"
    },
    {
      "lang": "Rust",
      "code": "impl Solution {\n    pub fn is_monotonic(a: Vec<i32>) -> bool {\n        \n    }\n}"
    },
    {
      "lang": "PHP",
      "code": "class Solution {\n\n    /**\n     * @param Integer[] $A\n     * @return Boolean\n     */\n    function isMonotonic($A) {\n        \n    }\n}"
    }
  ],
  "stats": "{\"totalAccepted\": \"71.4K\", \"totalSubmission\": \"126.3K\", \"totalAcceptedRaw\": 71355, \"totalSubmissionRaw\": 126257, \"acRate\": \"56.5%\"}",
  "hints": [],
  "solution": {
    "id": "546",
    "canSeeDetail": true,
    "url": "/articles/monotonic-array/",
    "content": "[TOC]\n\n## Solution\n---\n#### Approach 1: Two Pass\n\n**Intuition**\n\nAn array is *monotonic* if it is monotone increasing, or monotone decreasing.  Since `a <= b` and `b <= c` implies `a <= c`, we only need to check adjacent elements to determine if the array is monotone increasing (or decreasing, respectively).  We can check each of these properties in one pass.\n\n**Algorithm**\n\nTo check whether an array `A` is monotone increasing, we'll check `A[i] <= A[i+1]` for all `i`.  The check for monotone decreasing is similar.\n\n<iframe src=\"https://leetcode.com/playground/45YrvCAw/shared\" frameBorder=\"0\" width=\"100%\" height=\"344\" name=\"45YrvCAw\"></iframe>\n\n**Complexity Analysis**\n\n* Time Complexity:  $$O(N)$$, where $$N$$ is the length of `A`.\n\n* Space Complexity:  $$O(1)$$.\n<br />\n<br />\n\n\n---\n#### Approach 2: One Pass\n\n**Intuition**\n\nTo perform this check in one pass, we want to handle a stream of comparisons from $$\\{-1, 0, 1\\}$$, corresponding to `<`, `==`, or `>`.  For example, with the array `[1, 2, 2, 3, 0]`, we will see the stream `(-1, 0, -1, 1)`.\n\n**Algorithm**\n\nKeep track of `store`, equal to the first non-zero comparison seen (if it exists.)  If we see the opposite comparison, the answer is `False`.\n\nOtherwise, every comparison was (necessarily) in the set $$\\{-1, 0\\}$$, or every comparison was in the set $$\\{0, 1\\}$$, and therefore the array is monotonic.\n\n<iframe src=\"https://leetcode.com/playground/qcBYT2JK/shared\" frameBorder=\"0\" width=\"100%\" height=\"310\" name=\"qcBYT2JK\"></iframe>\n\n**Complexity Analysis**\n\n* Time Complexity:  $$O(N)$$, where $$N$$ is the length of `A`.\n\n* Space Complexity:  $$O(1)$$.\n<br />\n<br />\n\n\n---\n#### Approach 3: One Pass (Simple Variant)\n\n**Intuition and Algorithm**\n\nTo perform this check in one pass, we want to remember if it is monotone increasing or monotone decreasing.\n\nIt's monotone increasing if there aren't some adjacent values `A[i], A[i+1]` with `A[i] > A[i+1]`, and similarly for monotone decreasing.\n\nIf it is either monotone increasing or monotone decreasing, then `A` is monotonic.\n\n<iframe src=\"https://leetcode.com/playground/FnWYKTw8/shared\" frameBorder=\"0\" width=\"100%\" height=\"293\" name=\"FnWYKTw8\"></iframe>\n\n**Complexity Analysis**\n\n* Time Complexity:  $$O(N)$$, where $$N$$ is the length of `A`.\n\n* Space Complexity:  $$O(1)$$.\n<br />\n<br />\n\n\n---\n\n\nAnalysis written by: [@awice](https://leetcode.com/awice).",
    "contentTypeId": "107",
    "rating": {
      "id": "537",
      "count": 24,
      "average": 4.125,
      "userRating": null
    }
  },
  "status": null,
  "sampleTestCase": "[1,2,2,3]",
  "metaData": "{\r\n  \"name\": \"isMonotonic\",\r\n  \"params\": [\r\n    {\r\n      \"name\": \"A\",\r\n      \"type\": \"integer[]\"\r\n    }\r\n  ],\r\n  \"return\": {\r\n    \"type\": \"boolean\"\r\n  }\r\n}\r\n",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
