{
  "questionId": "1390",
  "questionFrontendId": "1251",
  "boundTopicId": null,
  "title": "Average Selling Price",
  "titleSlug": "average-selling-price",
  "categoryTitle": "Database",
  "content": "<p>Table: <code>Prices</code></p>\r\n\r\n<pre>\r\n+---------------+---------+\r\n| Column Name   | Type    |\r\n+---------------+---------+\r\n| product_id    | int     |\r\n| start_date    | date    |\r\n| end_date      | date    |\r\n| price         | int     |\r\n+---------------+---------+\r\n(product_id, start_date, end_date) is the primary key for this table.\r\nEach row of this table indicates the price of the product_id in the period from start_date to end_date.\r\nFor each product_id there will be no two overlapping periods. That means there will be no two intersecting periods for the same product_id.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Table: <code>UnitsSold</code></p>\r\n\r\n<pre>\r\n+---------------+---------+\r\n| Column Name   | Type    |\r\n+---------------+---------+\r\n| product_id    | int     |\r\n| purchase_date | date    |\r\n| units         | int     |\r\n+---------------+---------+\r\nThere is no primary key for this table, it may contain duplicates.\r\nEach row of this table indicates the date, units and product_id of each product sold. \r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Write an SQL query to find the average selling price for each product.</p>\r\n\r\n<p><code>average_price&nbsp;</code>should be&nbsp;<strong>rounded to 2 decimal places</strong>.</p>\r\n\r\n<p>The query result format is in the following example:</p>\r\n\r\n<pre>\r\nPrices table:\r\n+------------+------------+------------+--------+\r\n| product_id | start_date | end_date   | price  |\r\n+------------+------------+------------+--------+\r\n| 1          | 2019-02-17 | 2019-02-28 | 5      |\r\n| 1          | 2019-03-01 | 2019-03-22 | 20     |\r\n| 2          | 2019-02-01 | 2019-02-20 | 15     |\r\n| 2          | 2019-02-21 | 2019-03-31 | 30     |\r\n+------------+------------+------------+--------+\r\n \r\nUnitsSold table:\r\n+------------+---------------+-------+\r\n| product_id | purchase_date | units |\r\n+------------+---------------+-------+\r\n| 1          | 2019-02-25    | 100   |\r\n| 1          | 2019-03-01    | 15    |\r\n| 2          | 2019-02-10    | 200   |\r\n| 2          | 2019-03-22    | 30    |\r\n+------------+---------------+-------+\r\n\r\nResult table:\r\n+------------+---------------+\r\n| product_id | average_price |\r\n+------------+---------------+\r\n| 1          | 6.96          |\r\n| 2          | 16.96         |\r\n+------------+---------------+\r\nAverage selling price = Total Price of Product / Number of products sold.\r\nAverage selling price for product 1 = ((100 * 5) + (15 *&nbsp;20)) / 115 =&nbsp;6.96\r\nAverage selling price for product 2 = ((200 * 15) + (30&nbsp;* 30)) / 230 =&nbsp;16.96\r\n</pre>",
  "isPaidOnly": true,
  "difficulty": "Easy",
  "likes": 21,
  "dislikes": 4,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [],
  "topicTags": [],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Amazon\", \"slug\": \"amazon\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "MySQL",
      "code": "# Write your MySQL query statement below"
    },
    {
      "lang": "MS SQL Server",
      "code": "/* Write your T-SQL query statement below */"
    },
    {
      "lang": "Oracle",
      "code": "/* Write your PL/SQL query statement below */"
    }
  ],
  "stats": "{\"totalAccepted\": \"2.3K\", \"totalSubmission\": \"3K\", \"totalAcceptedRaw\": 2264, \"totalSubmissionRaw\": 2954, \"acRate\": \"76.6%\"}",
  "hints": [],
  "solution": null,
  "status": null,
  "sampleTestCase": "{\"headers\":{\"Prices\":[\"product_id\",\"start_date\",\"end_date\",\"price\"],\"UnitsSold\":[\"product_id\",\"purchase_date\",\"units\"]},\"rows\":{\"Prices\":[[1,\"2019-02-17\",\"2019-02-28\",5],[1,\"2019-03-01\",\"2019-03-22\",20],[2,\"2019-02-01\",\"2019-02-20\",15],[2,\"2019-02-21\",\"2019-03-31\",30]],\"UnitsSold\":[[1,\"2019-02-25\",100],[1,\"2019-03-01\",15],[2,\"2019-02-10\",200],[2,\"2019-03-22\",30]]}}",
  "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Prices (product_id int, start_date date, end_date date, price int)\",\n    \"Create table If Not Exists UnitsSold (product_id int, purchase_date date, units int)\"\n  ],\n  \"mssql\": [\n    \"Create table Prices (product_id int, start_date date, end_date date, price int)\",\n    \"Create table UnitsSold (product_id int, purchase_date date, units int)\"\n  ],\n  \"oraclesql\": [\n    \"Create table Prices (product_id int, start_date date, end_date date, price int)\",\n    \"Create table UnitsSold (product_id int, purchase_date date, units int)\",\n    \"ALTER SESSION SET nls_date_format='YYYY-MM-DD'\"\n  ],\n  \"database\": true\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [
    "Create table If Not Exists Prices (product_id int, start_date date, end_date date, price int)",
    "Create table If Not Exists UnitsSold (product_id int, purchase_date date, units int)",
    "Truncate table Prices",
    "insert into Prices (product_id, start_date, end_date, price) values ('1', '2019-02-17', '2019-02-28', '5')",
    "insert into Prices (product_id, start_date, end_date, price) values ('1', '2019-03-01', '2019-03-22', '20')",
    "insert into Prices (product_id, start_date, end_date, price) values ('2', '2019-02-01', '2019-02-20', '15')",
    "insert into Prices (product_id, start_date, end_date, price) values ('2', '2019-02-21', '2019-03-31', '30')",
    "Truncate table UnitsSold",
    "insert into UnitsSold (product_id, purchase_date, units) values ('1', '2019-02-25', '100')",
    "insert into UnitsSold (product_id, purchase_date, units) values ('1', '2019-03-01', '15')",
    "insert into UnitsSold (product_id, purchase_date, units) values ('2', '2019-02-10', '200')",
    "insert into UnitsSold (product_id, purchase_date, units) values ('2', '2019-03-22', '30')"
  ],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
