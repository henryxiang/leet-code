{
  "questionId": "180",
  "questionFrontendId": "180",
  "boundTopicId": null,
  "title": "Consecutive Numbers",
  "titleSlug": "consecutive-numbers",
  "categoryTitle": "Database",
  "content": "<p>Write a SQL query to find all numbers that appear at least three times consecutively.</p>\r\n\r\n<pre>\r\n+----+-----+\r\n| Id | Num |\r\n+----+-----+\r\n| 1  |  1  |\r\n| 2  |  1  |\r\n| 3  |  1  |\r\n| 4  |  2  |\r\n| 5  |  1  |\r\n| 6  |  2  |\r\n| 7  |  2  |\r\n+----+-----+\r\n</pre>\r\n\r\n<p>For example, given the above <code>Logs</code> table, <code>1</code> is the only number that appears consecutively for at least three times.</p>\r\n\r\n<pre>\r\n+-----------------+\r\n| ConsecutiveNums |\r\n+-----------------+\r\n| 1               |\r\n+-----------------+\r\n</pre>\r\n",
  "isPaidOnly": false,
  "difficulty": "Medium",
  "likes": 313,
  "dislikes": 81,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [],
  "topicTags": [],
  "companyTagStats": "{\"1\": [], \"2\": [], \"3\": []}",
  "codeSnippets": [
    {
      "lang": "MySQL",
      "code": "# Write your MySQL query statement below\n"
    },
    {
      "lang": "MS SQL Server",
      "code": "/* Write your T-SQL query statement below */\n"
    },
    {
      "lang": "Oracle",
      "code": "/* Write your PL/SQL query statement below */\n"
    }
  ],
  "stats": "{\"totalAccepted\": \"70.2K\", \"totalSubmission\": \"192.6K\", \"totalAcceptedRaw\": 70212, \"totalSubmissionRaw\": 192639, \"acRate\": \"36.4%\"}",
  "hints": [],
  "solution": {
    "id": "216",
    "canSeeDetail": true,
    "url": "/articles/consecutive-numbers/",
    "content": "[TOC]\n\n## Solution\n---\n#### Approach: Using `DISTINCT` and `WHERE` clause [Accepted]\n\n**Algorithm**\n\nConsecutive appearing means the Id of the Num are next to each others. Since this problem asks for numbers appearing at least three times consecutively, we can use 3 aliases for this table **Logs**, and then check whether 3 consecutive numbers are all the same.\n\n```sql\nSELECT *\nFROM\n    Logs l1,\n    Logs l2,\n    Logs l3\nWHERE\n    l1.Id = l2.Id - 1\n    AND l2.Id = l3.Id - 1\n    AND l1.Num = l2.Num\n    AND l2.Num = l3.Num\n;\n```\n| Id | Num | Id | Num | Id | Num |\n|----|-----|----|-----|----|-----|\n| 1  | 1   | 2  | 1   | 3  | 1   |\n>Note: The first two columns are from l1, then the next two are from l2, and the last two are from l3.\n\nThen we can select any *Num* column from the above table to get the target data. However, we need to add a keyword `DISTINCT` because it will display a duplicated number if one number appears more than 3 times consecutively.\n\n**MySQL**\n\n```sql\nSELECT DISTINCT\n    l1.Num AS ConsecutiveNums\nFROM\n    Logs l1,\n    Logs l2,\n    Logs l3\nWHERE\n    l1.Id = l2.Id - 1\n    AND l2.Id = l3.Id - 1\n    AND l1.Num = l2.Num\n    AND l2.Num = l3.Num\n;\n```",
    "contentTypeId": "107",
    "rating": {
      "id": "211",
      "count": 27,
      "average": 4,
      "userRating": null
    }
  },
  "status": null,
  "sampleTestCase": "{\"headers\": {\"Logs\": [\"Id\", \"Num\"]}, \"rows\": {\"Logs\": [[1, 1], [2, 1], [3, 1], [4, 2], [5, 1], [6, 2], [7, 2]]}}",
  "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Logs (Id int, Num int)\"\n  ],\n  \"mssql\": [\n    \"create table Logs ( Id int, Num int )\"\n  ],\n  \"oraclesql\": [\n    \"create table Logs ( Id int, Num int )\"\n  ],\n  \"database\": true\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [
    "Create table If Not Exists Logs (Id int, Num int)",
    "Truncate table Logs",
    "insert into Logs (Id, Num) values ('1', '1')",
    "insert into Logs (Id, Num) values ('2', '1')",
    "insert into Logs (Id, Num) values ('3', '1')",
    "insert into Logs (Id, Num) values ('4', '2')",
    "insert into Logs (Id, Num) values ('5', '1')",
    "insert into Logs (Id, Num) values ('6', '2')",
    "insert into Logs (Id, Num) values ('7', '2')"
  ],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
