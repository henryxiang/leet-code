{
  "questionId": "197",
  "questionFrontendId": "197",
  "boundTopicId": null,
  "title": "Rising Temperature",
  "titleSlug": "rising-temperature",
  "categoryTitle": "Database",
  "content": "<p>Given a <code>Weather</code> table, write a SQL query to find all dates&#39; Ids with higher temperature compared to its previous (yesterday&#39;s) dates.</p>\r\n\r\n<pre>\r\n+---------+------------------+------------------+\r\n| Id(INT) | RecordDate(DATE) | Temperature(INT) |\r\n+---------+------------------+------------------+\r\n|       1 |       2015-01-01 |               10 |\r\n|       2 |       2015-01-02 |               25 |\r\n|       3 |       2015-01-03 |               20 |\r\n|       4 |       2015-01-04 |               30 |\r\n+---------+------------------+------------------+\r\n</pre>\r\n\r\n<p>For example, return the following Ids for the above <code>Weather</code> table:</p>\r\n\r\n<pre>\r\n+----+\r\n| Id |\r\n+----+\r\n|  2 |\r\n|  4 |\r\n+----+\r\n</pre>\r\n",
  "isPaidOnly": false,
  "difficulty": "Easy",
  "likes": 306,
  "dislikes": 140,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [],
  "topicTags": [],
  "companyTagStats": "{\"2\": [{\"taggedByAdmin\": false, \"name\": \"Adobe\", \"slug\": \"adobe\", \"timesEncountered\": 2}], \"1\": [], \"3\": []}",
  "codeSnippets": [
    {
      "lang": "MySQL",
      "code": "# Write your MySQL query statement below\n"
    },
    {
      "lang": "MS SQL Server",
      "code": "/* Write your T-SQL query statement below */\n"
    },
    {
      "lang": "Oracle",
      "code": "/* Write your PL/SQL query statement below */\n"
    }
  ],
  "stats": "{\"totalAccepted\": \"95.5K\", \"totalSubmission\": \"260.7K\", \"totalAcceptedRaw\": 95532, \"totalSubmissionRaw\": 260736, \"acRate\": \"36.6%\"}",
  "hints": [],
  "solution": {
    "id": "211",
    "canSeeDetail": true,
    "url": "/articles/rising-temperature/",
    "content": "[TOC]\n\n## Solution\n---\n#### Approach: Using `JOIN` and `DATEDIFF()` clause [Accepted]\n\n**Algorithm**\n\nMySQL uses [DATEDIFF](https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_datediff) to compare two date type values.\n\nSo, we can get the result by joining this table **weather** with itself and use this `DATEDIFF()` function.\n\n**MySQL**\n\n```sql\nSELECT\n    weather.id AS 'Id'\nFROM\n    weather\n        JOIN\n    weather w ON DATEDIFF(weather.date, w.date) = 1\n        AND weather.Temperature > w.Temperature\n;\n```",
    "contentTypeId": "107",
    "rating": {
      "id": "206",
      "count": 22,
      "average": 4,
      "userRating": null
    }
  },
  "status": null,
  "sampleTestCase": "{\"headers\": {\"Weather\": [\"Id\", \"RecordDate\", \"Temperature\"]}, \"rows\": {\"Weather\": [[1, \"2015-01-01\", 10], [2, \"2015-01-02\", 25], [3, \"2015-01-03\", 20], [4, \"2015-01-04\", 30]]}}",
  "metaData": "{\r\n  \"mysql\": [\r\n    \"Create table If Not Exists Weather (Id int, RecordDate date, Temperature int)\"\r\n  ],\r\n  \"mssql\": [\r\n    \"create table Weather ( Id int, RecordDate date, Temperature int )\"\r\n  ],\r\n  \"oraclesql\": [\r\n    \"create table Weather ( Id int, RecordDate date, Temperature int )\",\r\n    \"ALTER SESSION SET nls_date_format='YYYY-MM-DD'\"\r\n  ],\r\n  \"database\": true\r\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [
    "Create table If Not Exists Weather (Id int, RecordDate date, Temperature int)",
    "Truncate table Weather",
    "insert into Weather (Id, RecordDate, Temperature) values ('1', '2015-01-01', '10')",
    "insert into Weather (Id, RecordDate, Temperature) values ('2', '2015-01-02', '25')",
    "insert into Weather (Id, RecordDate, Temperature) values ('3', '2015-01-03', '20')",
    "insert into Weather (Id, RecordDate, Temperature) values ('4', '2015-01-04', '30')"
  ],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
