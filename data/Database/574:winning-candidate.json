{
  "questionId": "574",
  "questionFrontendId": "574",
  "boundTopicId": null,
  "title": "Winning Candidate",
  "titleSlug": "winning-candidate",
  "categoryTitle": "Database",
  "content": "<p>Table: <code>Candidate</code></p>\n\n<pre>\n+-----+---------+\n| id  | Name    |\n+-----+---------+\n| 1   | A       |\n| 2   | B       |\n| 3   | C       |\n| 4   | D       |\n| 5   | E       |\n+-----+---------+  \n</pre>\n\n<p>Table: <code>Vote</code></p>\n\n<pre>\n+-----+--------------+\n| id  | CandidateId  |\n+-----+--------------+\n| 1   |     2        |\n| 2   |     4        |\n| 3   |     3        |\n| 4   |     2        |\n| 5   |     5        |\n+-----+--------------+\nid is the auto-increment primary key,\nCandidateId is the id appeared in Candidate table.\n</pre>\n\n<p>Write a sql to find the name of the winning candidate, the above example will return the winner <code>B</code>.</p>\n\n<pre>\n+------+\n| Name |\n+------+\n| B    |\n+------+\n</pre>\n\n<p><b>Notes:</b></p>\n\n<ol>\n\t<li>You may assume <b>there is no tie</b>, in other words there will be <b>only one</b> winning candidate.</li>\n</ol>\n\n<p>&nbsp;</p>\n",
  "isPaidOnly": true,
  "difficulty": "Medium",
  "likes": 34,
  "dislikes": 235,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "Douglas1612",
      "profileUrl": "/douglas1612/",
      "avatarUrl": "https://www.gravatar.com/avatar/8e60a4b596b7a8ba118c776bac2a0b04.png?s=200"
    }
  ],
  "topicTags": [],
  "companyTagStats": "{\"1\": [], \"2\": [], \"3\": []}",
  "codeSnippets": [
    {
      "lang": "MySQL",
      "code": "# Write your MySQL query statement below\n"
    },
    {
      "lang": "MS SQL Server",
      "code": "/* Write your T-SQL query statement below */\n"
    },
    {
      "lang": "Oracle",
      "code": "/* Write your PL/SQL query statement below */\n"
    }
  ],
  "stats": "{\"totalAccepted\": \"13.5K\", \"totalSubmission\": \"34K\", \"totalAcceptedRaw\": 13532, \"totalSubmissionRaw\": 33951, \"acRate\": \"39.9%\"}",
  "hints": [],
  "solution": {
    "id": "208",
    "canSeeDetail": true,
    "url": "/articles/winning-candidate/",
    "content": "[TOC]\n\n## Solution\n---\n#### Approach: Using `JOIN` and a temporary table [Accepted]\n\n**Algorithm**\n\nQuery in the **Vote** table to get the winner's id and then join it with the **Candidate** table to get the name.\n\n**MySQL**\n\n```sql\nSELECT\n    name AS 'Name'\nFROM\n    Candidate\n        JOIN\n    (SELECT\n        Candidateid\n    FROM\n        Vote\n    GROUP BY Candidateid\n    ORDER BY COUNT(*) DESC\n    LIMIT 1) AS winner\nWHERE\n    Candidate.id = winner.Candidateid\n;\n```",
    "contentTypeId": "107",
    "rating": {
      "id": "203",
      "count": 8,
      "average": 3.625,
      "userRating": null
    }
  },
  "status": null,
  "sampleTestCase": "{\"headers\":{\"Candidate\":[\"id\",\"Name\"],\"Vote\":[\"id\",\"CandidateId\"]},\"rows\":{\"Candidate\":[[1,\"A\"],[2,\"B\"],[3,\"C\"],[4,\"D\"],[5,\"E\"]],\"Vote\":[[1,2],[2,4],[3,3],[4,2],[5,5]]}}",
  "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Candidate (id int, Name varchar(255))\",\n    \"Create table If Not Exists Vote (id int, CandidateId int)\"\n  ],\n  \"mssql\": [\n    \"Create table Candidate (id int, Name varchar(255))\",\n    \"Create table Vote (id int, CandidateId int)\"\n  ],\n  \"oraclesql\": [\n    \"Create table Candidate (id int, Name varchar(255))\",\n    \"Create table Vote (id int, CandidateId int)\"\n  ],\n  \"database\": true\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [
    "Create table If Not Exists Candidate (id int, Name varchar(255))",
    "Create table If Not Exists Vote (id int, CandidateId int)",
    "Truncate table Candidate",
    "insert into Candidate (id, Name) values ('1', 'A')",
    "insert into Candidate (id, Name) values ('2', 'B')",
    "insert into Candidate (id, Name) values ('3', 'C')",
    "insert into Candidate (id, Name) values ('4', 'D')",
    "insert into Candidate (id, Name) values ('5', 'E')",
    "Truncate table Vote",
    "insert into Vote (id, CandidateId) values ('1', '2')",
    "insert into Vote (id, CandidateId) values ('2', '4')",
    "insert into Vote (id, CandidateId) values ('3', '3')",
    "insert into Vote (id, CandidateId) values ('4', '2')",
    "insert into Vote (id, CandidateId) values ('5', '5')"
  ],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
