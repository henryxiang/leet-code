{
  "questionId": "580",
  "questionFrontendId": "580",
  "boundTopicId": null,
  "title": "Count Student Number in Departments",
  "titleSlug": "count-student-number-in-departments",
  "categoryTitle": "Database",
  "content": "<p>A university uses 2 data tables, <b><i>student</i></b> and <b><i>department</i></b>, to store data about its students and the departments associated with each major.</p>\r\n\r\n<p>Write a query to print the respective department name and number of students majoring in each department for all departments in the <b><i>department</i></b> table (even ones with no current students).</p>\r\n\r\n<p>Sort your results by descending number of students; if two or more departments have the same number of students, then sort those departments alphabetically by department name.</p>\r\n\r\n<p>The <b><i>student</i></b> is described as follow:</p>\r\n\r\n<pre>\r\n| Column Name  | Type      |\r\n|--------------|-----------|\r\n| student_id   | Integer   |\r\n| student_name | String    |\r\n| gender       | Character |\r\n| dept_id      | Integer   |\r\n</pre>\r\n\r\n<p>where student_id is the student&#39;s ID number, student_name is the student&#39;s name, gender is their gender, and dept_id is the department ID associated with their declared major.</p>\r\n\r\n<p>And the <b><i>department</i></b> table is described as below:</p>\r\n\r\n<pre>\r\n| Column Name | Type    |\r\n|-------------|---------|\r\n| dept_id     | Integer |\r\n| dept_name   | String  |\r\n</pre>\r\n\r\n<p>where dept_id is the department&#39;s ID number and dept_name is the department name.</p>\r\n\r\n<p>Here is an example <b>input</b>:<br />\r\n<b><i>student</i></b> table:</p>\r\n\r\n<pre>\r\n| student_id | student_name | gender | dept_id |\r\n|------------|--------------|--------|---------|\r\n| 1          | Jack         | M      | 1       |\r\n| 2          | Jane         | F      | 1       |\r\n| 3          | Mark         | M      | 2       |\r\n</pre>\r\n\r\n<p><b><i>department</i></b> table:</p>\r\n\r\n<pre>\r\n| dept_id | dept_name   |\r\n|---------|-------------|\r\n| 1       | Engineering |\r\n| 2       | Science     |\r\n| 3       | Law         |\r\n</pre>\r\n\r\n<p>The <b>Output</b> should be:</p>\r\n\r\n<pre>\r\n| dept_name   | student_number |\r\n|-------------|----------------|\r\n| Engineering | 2              |\r\n| Science     | 1              |\r\n| Law         | 0              |\r\n</pre>\r\n",
  "isPaidOnly": true,
  "difficulty": "Medium",
  "likes": 75,
  "dislikes": 9,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "Mr-Bin",
      "profileUrl": "/mr-bin/",
      "avatarUrl": "https://assets.leetcode.com/users/mr-bin/avatar_1547655304.png"
    }
  ],
  "topicTags": [],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Twitter\", \"slug\": \"twitter\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "MySQL",
      "code": "# Write your MySQL query statement below\r\n"
    },
    {
      "lang": "MS SQL Server",
      "code": "/* Write your T-SQL query statement below */\r\n"
    },
    {
      "lang": "Oracle",
      "code": "/* Write your PL/SQL query statement below */\r\n"
    }
  ],
  "stats": "{\"totalAccepted\": \"14K\", \"totalSubmission\": \"31K\", \"totalAcceptedRaw\": 14030, \"totalSubmissionRaw\": 31002, \"acRate\": \"45.3%\"}",
  "hints": [
    "Still remember the difference between 'INNER JOIN' and 'OUTTER JOIN' in SQL?",
    "Do you know other expressions using the 'COUNT' function besides 'COUNT(*)'?"
  ],
  "solution": {
    "id": "159",
    "canSeeDetail": true,
    "url": "/articles/count-student-number-in-departments/",
    "content": "[TOC]\n\n## Solution\n---\n#### Approach: Using `OUTER JOIN` and `COUNT(expression)` [Accepted]\n\n**Intuition**\n\nUse `GROUP BY` function can measure student number in a department, and then use `COUNT` function to count the number of records of each department.\n\n**Algorithm**\n\nWe can use `OUTER JOIN` to query all departments. The problem is to display '0' for departments without no current students. Some people will write the following query using `COUNT(*)`.\n\n```sql\nSELECT\n    dept_name, COUNT(*) AS student_number\nFROM\n    department\n        LEFT OUTER JOIN\n    student ON department.dept_id = student.dept_id\nGROUP BY department.dept_name\nORDER BY student_number DESC , department.dept_name\n;\n```\n\nUnfortunately, it wrongly displays '1' for departments like 'Law' without current students for the sample input.\n```\n| dept_name   | student_number |\n|-------------|----------------|\n| Engineering | 2              |\n| Law         | 1              |\n| Science     | 1              |\n```\nInstead, `COUNT(expression)` could be used because it does not take account if `expression is null`. You can refer to the [MySQL manual](https://dev.mysql.com/doc/refman/5.7/en/counting-rows.html) for the details.\n\nThus, here is a right solution after fixing the issue above.\n\n**MySQL**\n\n```sql\nSELECT\n    dept_name, COUNT(student_id) AS student_number\nFROM\n    department\n        LEFT OUTER JOIN\n    student ON department.dept_id = student.dept_id\nGROUP BY department.dept_name\nORDER BY student_number DESC , department.dept_name\n;\n```",
    "contentTypeId": "107",
    "rating": {
      "id": "154",
      "count": 9,
      "average": 4.889,
      "userRating": null
    }
  },
  "status": null,
  "sampleTestCase": "{\"headers\":{\"student\":[\"student_id\",\"student_name\",\"gender\",\"dept_id\"],\"department\":[\"dept_id\",\"dept_name\"]},\"rows\":{\"student\":[[1,\"Jack\",\"M\",1],[2,\"Jane\",\"F\",1],[3,\"Mark\",\"M\",2]],\"department\":[[1,\"Engineering\"],[2,\"Science\"],[3,\"Law\"]]}}",
  "metaData": "{\r\n  \"mysql\": [\r\n    \"CREATE TABLE IF NOT EXISTS student (student_id INT,student_name VARCHAR(45), gender VARCHAR(6), dept_id INT)\",\r\n    \"CREATE TABLE IF NOT EXISTS department (dept_id INT, dept_name VARCHAR(255))\"\r\n  ],\r\n  \"mssql\": [\r\n    \"CREATE TABLE student (student_id INT,student_name VARCHAR(45), gender VARCHAR(6), dept_id INT)\",\r\n    \"CREATE TABLE department (dept_id INT, dept_name VARCHAR(255))\"\r\n  ],\r\n  \"oraclesql\": [\r\n    \"CREATE TABLE student (student_id INT,student_name VARCHAR(45), gender VARCHAR(6), dept_id INT)\",\r\n    \"CREATE TABLE department (dept_id INT, dept_name VARCHAR(255))\"\r\n  ],\r\n  \"database\": true\r\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [
    "CREATE TABLE IF NOT EXISTS student (student_id INT,student_name VARCHAR(45), gender VARCHAR(6), dept_id INT)",
    "CREATE TABLE IF NOT EXISTS department (dept_id INT, dept_name VARCHAR(255))",
    "Truncate table student",
    "insert into student (student_id, student_name, gender, dept_id) values ('1', 'Jack', 'M', '1')",
    "insert into student (student_id, student_name, gender, dept_id) values ('2', 'Jane', 'F', '1')",
    "insert into student (student_id, student_name, gender, dept_id) values ('3', 'Mark', 'M', '2')",
    "Truncate table department",
    "insert into department (dept_id, dept_name) values ('1', 'Engineering')",
    "insert into department (dept_id, dept_name) values ('2', 'Science')",
    "insert into department (dept_id, dept_name) values ('3', 'Law')"
  ],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
