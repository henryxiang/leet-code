{
  "questionId": "585",
  "questionFrontendId": "585",
  "boundTopicId": null,
  "title": "Investments in 2016",
  "titleSlug": "investments-in-2016",
  "categoryTitle": "Database",
  "content": "<p>Write a query to print the sum of all total investment values in 2016 (<b>TIV_2016</b>), to a scale of 2 decimal places, for all policy holders who meet the following criteria:</p>\r\n\r\n<ol>\r\n\t<li>Have the same <b>TIV_2015</b> value as one or more other policyholders.</li>\r\n\t<li>Are not located in the same city as any other policyholder (i.e.: the (latitude, longitude) attribute pairs must be unique).</li>\r\n</ol>\r\n\r\n<p><b>Input Format:</b><br />\r\nThe <b><i>insurance</i></b> table is described as follows:</p>\r\n\r\n<pre>\r\n| Column Name | Type          |\r\n|-------------|---------------|\r\n| PID         | INTEGER(11)   |\r\n| TIV_2015    | NUMERIC(15,2) |\r\n| TIV_2016    | NUMERIC(15,2) |\r\n| LAT         | NUMERIC(5,2)  |\r\n| LON         | NUMERIC(5,2)  |\r\n</pre>\r\n\r\n<p>where <b>PID</b> is the policyholder&#39;s policy ID, <b>TIV_2015</b> is the total investment value in 2015, <b>TIV_2016</b> is the total investment value in 2016, <b>LAT</b> is the latitude of the policy holder&#39;s city, and <b>LON</b> is the longitude of the policy holder&#39;s city.</p>\r\n\r\n<p><b>Sample Input</b></p>\r\n\r\n<pre>\r\n| PID | TIV_2015 | TIV_2016 | LAT | LON |\r\n|-----|----------|----------|-----|-----|\r\n| 1   | 10       | 5        | 10  | 10  |\r\n| 2   | 20       | 20       | 20  | 20  |\r\n| 3   | 10       | 30       | 20  | 20  |\r\n| 4   | 10       | 40       | 40  | 40  |\r\n</pre>\r\n\r\n<p><b>Sample Output</b></p>\r\n\r\n<pre>\r\n| TIV_2016 |\r\n|----------|\r\n| 45.00    |\r\n</pre>\r\n\r\n<p><b>Explanation</b></p>\r\n\r\n<pre>\r\nThe first record in the table, like the last record, meets both of the two criteria.\r\nThe <b>TIV_2015</b> value &#39;10&#39; is as the same as the third and forth record, and its location unique.\r\n\r\nThe second record does not meet any of the two criteria. Its <b>TIV_2015</b> is not like any other policyholders.\r\n\r\nAnd its location is the same with the third record, which makes the third record fail, too.\r\n\r\nSo, the result is the sum of <b>TIV_2016</b> of the first and last record, which is 45.</pre>\r\n",
  "isPaidOnly": true,
  "difficulty": "Medium",
  "likes": 76,
  "dislikes": 59,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "Mr-Bin",
      "profileUrl": "/mr-bin/",
      "avatarUrl": "https://assets.leetcode.com/users/mr-bin/avatar_1547655304.png"
    }
  ],
  "topicTags": [],
  "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Twitter\", \"slug\": \"twitter\", \"timesEncountered\": 2}], \"1\": [], \"2\": []}",
  "codeSnippets": [
    {
      "lang": "MySQL",
      "code": "# Write your MySQL query statement below\n"
    },
    {
      "lang": "MS SQL Server",
      "code": "/* Write your T-SQL query statement below */\n"
    },
    {
      "lang": "Oracle",
      "code": "/* Write your PL/SQL query statement below */\n"
    }
  ],
  "stats": "{\"totalAccepted\": \"11.2K\", \"totalSubmission\": \"22.1K\", \"totalAcceptedRaw\": 11199, \"totalSubmissionRaw\": 22051, \"acRate\": \"50.8%\"}",
  "hints": [
    "Make the (LAT, LON) a pair to represent the location information"
  ],
  "solution": {
    "id": "130",
    "canSeeDetail": true,
    "url": "/articles/investments-in-2016/",
    "content": "[TOC]\n\n## Solution\n---\n#### Approach: Using `GROUP BY` and `COUNT` [Accepted]\n\n**Intuition**\n\nTo decide whether a value in a column is unique or not, we can use `GROUP BY` and `COUNT`.\n\n**Algorithm**\n\nCheck whether the value of a record's **TIV_2015** is unique, if it is not unique, and at the same time, its location (LAT, LON) pair is unique, then this record meeting the criteria. So it should be counted in the sum.\n\n**MySQL**\n\n```sql\nSELECT\n    SUM(insurance.TIV_2016) AS TIV_2016\nFROM\n    insurance\nWHERE\n    insurance.TIV_2015 IN\n    (\n      SELECT\n        TIV_2015\n      FROM\n        insurance\n      GROUP BY TIV_2015\n      HAVING COUNT(*) > 1\n    )\n    AND CONCAT(LAT, LON) IN\n    (\n      SELECT\n        CONCAT(LAT, LON)\n      FROM\n        insurance\n      GROUP BY LAT , LON\n      HAVING COUNT(*) = 1\n    )\n;\n```\n>Tips: Concat the **LAT** and **LON** as a whole to represent the location information.\n\nNote: These two criteria should be met without an order, so if you attempt to filter data using criteria #1 first and then criteria #2, you will get a wrong result.\n\nTaking the sample input as an example, the data set will be as following after taking the first criteria.\n\n| PID | TIV_2015 | TIV_2016 | LAT | LON |\n|-----|----------|----------|-----|-----|\n| 1   | 10       | 5        | 10  | 10  |\n| 3   | 10       | 30       | 20  | 20  |\n| 4   | 10       | 40       | 40  | 40  |\n\nThen, the second criteria cannot filter any records on this data set. So the result is 75(5+30+40), which is obviously wrong since the location of record with PID '3' is actually the same with the record having been filtered by the first criteria.\n\n| PID | TIV_2015 | TIV_2016 | LAT | LON |\n|-----|----------|----------|-----|-----|\n| 2   | 20       | 20       | 20  | 20  |\n| 3   | 10       | 30       | 20  | 20  |",
    "contentTypeId": "107",
    "rating": {
      "id": "127",
      "count": 13,
      "average": 4.154,
      "userRating": null
    }
  },
  "status": null,
  "sampleTestCase": "{\"headers\":{\"insurance\":[\"PID\",\"TIV_2015\",\"TIV_2016\",\"LAT\",\"LON\"]},\"rows\":{\"insurance\":[[1,10,5,10,10],[2,20,20,20,20],[3,10,30,20,20],[4,10,40,40,40]]}}",
  "metaData": "{\r\n  \"mysql\": [\r\n    \"CREATE TABLE IF NOT EXISTS insurance (PID INTEGER(11), TIV_2015 NUMERIC(15,2), TIV_2016 NUMERIC(15,2), LAT NUMERIC(5,2), LON NUMERIC(5,2) )\"\r\n  ],\r\n  \"mssql\": [\r\n    \"CREATE TABLE insurance (PID INT, TIV_2015 DECIMAL(15,2), TIV_2016 DECIMAL(15,2), LAT DECIMAL(5,2), LON DECIMAL(5,2) )\"\r\n  ],\r\n  \"oraclesql\": [\r\n    \"CREATE TABLE insurance (PID INT, TIV_2015 NUMBER(15,2), TIV_2016 NUMBER(15,2), LAT NUMBER(5,2), LON NUMBER(5,2) )\"\r\n  ],\r\n  \"database\": true\r\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [
    "CREATE TABLE IF NOT EXISTS insurance (PID INTEGER(11), TIV_2015 NUMERIC(15,2), TIV_2016 NUMERIC(15,2), LAT NUMERIC(5,2), LON NUMERIC(5,2) )",
    "Truncate table insurance",
    "insert into insurance (PID, TIV_2015, TIV_2016, LAT, LON) values ('1', '10', '5', '10', '10')",
    "insert into insurance (PID, TIV_2015, TIV_2016, LAT, LON) values ('2', '20', '20', '20', '20')",
    "insert into insurance (PID, TIV_2015, TIV_2016, LAT, LON) values ('3', '10', '30', '20', '20')",
    "insert into insurance (PID, TIV_2015, TIV_2016, LAT, LON) values ('4', '10', '40', '40', '40')"
  ],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
