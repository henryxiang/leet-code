{
  "questionId": "597",
  "questionFrontendId": "597",
  "boundTopicId": null,
  "title": "Friend Requests I: Overall Acceptance Rate",
  "titleSlug": "friend-requests-i-overall-acceptance-rate",
  "categoryTitle": "Database",
  "content": "In social network like Facebook or Twitter, people send friend requests and accept others&rsquo; requests as well. Now given two tables as below:\r\n<p>&nbsp;</p>\r\nTable: <code>friend_request</code>\r\n\r\n<pre>\r\n| sender_id | send_to_id |request_date|\r\n|-----------|------------|------------|\r\n| 1         | 2          | 2016_06-01 |\r\n| 1         | 3          | 2016_06-01 |\r\n| 1         | 4          | 2016_06-01 |\r\n| 2         | 3          | 2016_06-02 |\r\n| 3         | 4          | 2016-06-09 |\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\nTable: <code>request_accepted</code>\r\n\r\n<pre>\r\n| requester_id | accepter_id |accept_date |\r\n|--------------|-------------|------------|\r\n| 1            | 2           | 2016_06-03 |\r\n| 1            | 3           | 2016-06-08 |\r\n| 2            | 3           | 2016-06-08 |\r\n| 3            | 4           | 2016-06-09 |\r\n| 3            | 4           | 2016-06-10 |\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\nWrite a query to find the overall acceptance rate of requests rounded to 2 decimals, which is the number of acceptance divide the number of requests.\r\n\r\n<p>&nbsp;</p>\r\nFor the sample data above, your query should return the following result.\r\n\r\n<p>&nbsp;</p>\r\n\r\n<pre>\r\n|accept_rate|\r\n|-----------|\r\n|       0.80|\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<b>Note:</b>\r\n\r\n<ul>\r\n\t<li>The accepted requests are not necessarily from the table <code>friend_request</code>. In this case, you just need to simply count the total accepted requests (no matter whether they are in the original requests), and divide it by the number of requests to get the acceptance rate.</li>\r\n\t<li>It is possible that a sender sends multiple requests to the same receiver, and a request could be accepted more than once. In this case, the &lsquo;duplicated&rsquo; requests or acceptances are only counted once.</li>\r\n\t<li>If there is no requests at all, you should return 0.00 as the accept_rate.</li>\r\n</ul>\r\n\r\n<p>&nbsp;</p>\r\n<b>Explanation:</b> There are 4 unique accepted requests, and there are 5 requests in total. So the rate is 0.80.\r\n\r\n<p>&nbsp;</p>\r\n<b>Follow-up:</b>\r\n\r\n<ul>\r\n\t<li>Can you write a query to return the accept rate but for every month?</li>\r\n\t<li>How about the cumulative accept rate for every day?</li>\r\n</ul>\r\n",
  "isPaidOnly": true,
  "difficulty": "Easy",
  "likes": 107,
  "dislikes": 196,
  "isLiked": null,
  "similarQuestions": "[]",
  "contributors": [
    {
      "username": "Mr-Bin",
      "profileUrl": "/mr-bin/",
      "avatarUrl": "https://assets.leetcode.com/users/mr-bin/avatar_1547655304.png"
    }
  ],
  "topicTags": [],
  "companyTagStats": "{\"1\": [{\"taggedByAdmin\": true, \"name\": \"Facebook\", \"slug\": \"facebook\", \"timesEncountered\": 2}], \"2\": [], \"3\": []}",
  "codeSnippets": [
    {
      "lang": "MySQL",
      "code": "# Write your MySQL query statement below\n"
    },
    {
      "lang": "MS SQL Server",
      "code": "/* Write your T-SQL query statement below */\n"
    },
    {
      "lang": "Oracle",
      "code": "/* Write your PL/SQL query statement below */\n"
    }
  ],
  "stats": "{\"totalAccepted\": \"18.2K\", \"totalSubmission\": \"44.8K\", \"totalAcceptedRaw\": 18180, \"totalSubmissionRaw\": 44771, \"acRate\": \"40.6%\"}",
  "hints": [
    "Still remember how to count the number of rows in a table?",
    "What is the keyword to filter the duplicated records in a table?"
  ],
  "solution": {
    "id": "161",
    "canSeeDetail": true,
    "url": "/articles/friend-requests-i-overall-acceptance-rate/",
    "content": "[TOC]\n\n## Solution\n---\n#### Approach: Using `round` and `ifnull` [Accepted]\n\n**Intuition**\n\nCount the accepted requests and then divides it by the number of all requests.\n\n**Algorithm**\n\nTo get the distinct number of accepted requests, we can query from the **request_accepted** table.\n```sql\nselect count(*) from (select distinct requester_id, accepter_id from request_accepted;\n```\n\nWith the same technique, we can have the total number of requests from the **friend_request** table:\n```sql\nselect count(*) from (select distinct sender_id, send_to_id from friend_request;\n```\n\nAt last, divide these two numbers and [`round`](https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html#function_round) it to a scale of 2 decimal places to get the required acceptance rate.\n\nWait! The divisor (total number of requests) could be '0' if the table **friend_request** is empty. So, we have to utilize  [`ifnull`](https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html#function_ifnull) to deal with this special case.\n\n**MySQL**\n\n```sql\nselect\nround(\n    ifnull(\n    (select count(*) from (select distinct requester_id, accepter_id from request_accepted) as A)\n    /\n    (select count(*) from (select distinct sender_id, send_to_id from friend_request) as B),\n    0)\n, 2) as accept_rate;\n```",
    "contentTypeId": "107",
    "rating": {
      "id": "156",
      "count": 18,
      "average": 4.444,
      "userRating": null
    }
  },
  "status": null,
  "sampleTestCase": "{\"headers\":{\"friend_request\":[\"sender_id\",\"send_to_id\",\"request_date\"],\"request_accepted\":[\"requester_id\",\"accepter_id\",\"accept_date\"]},\"rows\":{\"friend_request\":[[1,2,\"2016/06/01\"],[1,3,\"2016/06/01\"],[1,4,\"2016/06/01\"],[2,3,\"2016/06/02\"],[3,4,\"2016/06/09\"]],\"request_accepted\":[[1,2,\"2016/06/03\"],[1,3,\"2016/06/08\"],[2,3,\"2016/06/08\"],[3,4,\"2016/06/09\"],[3,4,\"2016/06/10\"]]}}",
  "metaData": "{\r\n  \"mysql\": [\r\n    \"Create table If Not Exists friend_request  (        sender_id INT NOT NULL,        send_to_id INT NULL,        request_date DATE NULL)\",\r\n    \"Create table If Not Exists request_accepted (        requester_id INT NOT NULL,        accepter_id INT NULL,        accept_date DATE NULL)\"\r\n  ],\r\n  \"mssql\": [\r\n    \"Create table friend_request  (        sender_id INT NOT NULL,        send_to_id INT NULL,        request_date DATE NULL)\",\r\n    \"Create table request_accepted (        requester_id INT NOT NULL,        accepter_id INT NULL,        accept_date DATE NULL)\"\r\n  ],\r\n  \"oraclesql\": [\r\n    \"Create table friend_request  (        sender_id INT NOT NULL,        send_to_id INT NULL,        request_date DATE NULL)\",\r\n    \"Create table request_accepted (        requester_id INT NOT NULL,        accepter_id INT NULL,        accept_date DATE NULL)\",\r\n    \"alter SESSION set NLS_DATE_FORMAT = 'YYYY/MM/DD'\"\r\n  ],\r\n  \"database\": true\r\n}",
  "judgerAvailable": true,
  "judgeType": "large",
  "mysqlSchemas": [
    "Create table If Not Exists friend_request  (        sender_id INT NOT NULL,        send_to_id INT NULL,        request_date DATE NULL)",
    "Create table If Not Exists request_accepted (        requester_id INT NOT NULL,        accepter_id INT NULL,        accept_date DATE NULL)",
    "Truncate table friend_request",
    "insert into friend_request (sender_id, send_to_id, request_date) values ('1', '2', '2016/06/01')",
    "insert into friend_request (sender_id, send_to_id, request_date) values ('1', '3', '2016/06/01')",
    "insert into friend_request (sender_id, send_to_id, request_date) values ('1', '4', '2016/06/01')",
    "insert into friend_request (sender_id, send_to_id, request_date) values ('2', '3', '2016/06/02')",
    "insert into friend_request (sender_id, send_to_id, request_date) values ('3', '4', '2016/06/09')",
    "Truncate table request_accepted",
    "insert into request_accepted (requester_id, accepter_id, accept_date) values ('1', '2', '2016/06/03')",
    "insert into request_accepted (requester_id, accepter_id, accept_date) values ('1', '3', '2016/06/08')",
    "insert into request_accepted (requester_id, accepter_id, accept_date) values ('2', '3', '2016/06/08')",
    "insert into request_accepted (requester_id, accepter_id, accept_date) values ('3', '4', '2016/06/09')",
    "insert into request_accepted (requester_id, accepter_id, accept_date) values ('3', '4', '2016/06/10')"
  ],
  "enableRunCode": true,
  "enableTestMode": false,
  "libraryUrl": null
}
